const __universalAtob = function (b64Encoded) {
    try {
        let binary_string = atob(b64Encoded), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(b64Encoded, 'base64'));
    }
};
const __forWasmBuffer = 'AGFzbQEAAAABiICAgAACYAAAYAABfwKkgICAAAMDZW52BHRlc3QAAQNlbnYGdXBkYXRlAAADZW52BGJvZHkAAAOCgICAAAEABISAgIAAAXAAAAWDgICAAAEAAQeRgICAAAIGbWVtb3J5AgAEZGF0YQADCpmAgIAAAZOAgIAAAAJAA0AQAEUNARACEAEMAAsLCw==';
const __forWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__forWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__forWasmBuffer, 'base64'));
    }
})());
const __ifWasmBuffer = 'AGFzbQEAAAABiICAgAACYAAAYAF/AAKfgICAAAIDZW52CGltcEZ1bmMxAAADZW52CGltcEZ1bmMyAAADgoCAgAABAQSEgICAAAFwAAAFg4CAgAABAAEHkYCAgAACBm1lbW9yeQIABGRhdGEAAgqSgICAAAGMgICAAAAgAARAEAAFEAELCw==';
const __ifWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__ifWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__ifWasmBuffer, 'base64'));
    }
})());
const __callWasmBuffer = 'AGFzbQEAAAABhICAgAABYAAAAo+AgIAAAQNlbnYHaW1wRnVuYwAAA4KAgIAAAQAEhICAgAABcAAABYOAgIAAAQABB5GAgIAAAgZtZW1vcnkCAARkYXRhAAEKioCAgAABhICAgAAAEAAL';
const __callWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__callWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__callWasmBuffer, 'base64'));
    }
})());
const __wasmStringModules = [
    '',
    ''
].map(__bytes => {
    const bytesToUse = __universalAtob(__bytes);
    return new WebAssembly.Instance(new WebAssembly.Module(bytesToUse));
});
const lS = (wI, pos, iWC) => {
    let __str = '';
    if (!Array.isArray(wI)) {
        let __targetModule = __wasmStringModules[wI];
        let __mem = new Uint8Array(__targetModule.exports.memory.buffer);
        const __stringKey = `data${ pos }`;
        let __start = __targetModule.exports[__stringKey] - 1;
        let __str = '';
        let i = __start;
        let __c = __mem[i++];
        while (!(parseInt(__c) & 128) && __mem[i]) {
            __str += __c;
            __c = String.fromCharCode(__mem[i++]);
        }
        __str += __c;
        __str = decodeURIComponent(__str.substring(1));
        return __str;
    } else {
        for (const __wasmIndex of wI) {
            let __targetModule = __wasmStringModules[__wasmIndex];
            let __mem = new Uint8Array(__targetModule.exports.memory.buffer);
            const __stringKey = `data${ pos }`;
            let __start = __targetModule.exports[__stringKey] - 1;
            let i = __start;
            let __c = __mem[i++];
            while (!(parseInt(__c) & 128) && __mem[i]) {
                __str += __c;
                __c = String.fromCharCode(__mem[i++]);
            }
            __str += __c;
        }
        __str = decodeURIComponent(__str.substring(1));
        return __str;
    }
};
var kpfLayerCounter = 0;
var eventOverallDuration = 0;
var KPFPlaybackController = Class.create({
    initialize: function (b, a) {
        this.domNode = a;
        this.kpfEvent = null;
    },
    destroy: function () {
        (() => {
            const __callInstance228 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.removeEvent();
                    }
                }
            });
            const __exports = __callInstance228.exports;
            return __exports.data();
        })();
        this.domNode = null;
    },
    removeEvent: function () {
        (() => {
            const __ifInstance0 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance227 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.kpfEvent.destroy();
                                        }
                                    }
                                });
                                const __exports = __callInstance227.exports;
                                return __exports.data();
                            })();
                            delete this.kpfEvent;
                            this.kpfEvent = null;
                            (() => {
                                const __forInstance31 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return this.domNode.childNodes.length > 0 ? 1 : 0;
                                        },
                                        update: () => {
                                        },
                                        body: () => {
                                            {
                                                (() => {
                                                    const __callInstance226 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.domNode.removeChild(this.domNode.childNodes[0]);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance226.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance31.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance0.exports;
            return __exports.data(this.kpfEvent ? 1 : 0);
        })();
    },
    renderEvent: function (a) {
        (() => {
            const __callInstance225 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.removeEvent();
                    }
                }
            });
            const __exports = __callInstance225.exports;
            return __exports.data();
        })();
        this.kpfEvent = a;
        (() => {
            const __callInstance224 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.kpfEvent.renderEvent(this.domNode);
                    }
                }
            });
            const __exports = __callInstance224.exports;
            return __exports.data();
        })();
    },
    renderEffects: function () {
        var a = this.kpfEvent.renderEffects(this.kpfEvent.event.effects);
        return a;
    },
    animateEffects: function (a) {
        (() => {
            const __callInstance223 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.kpfEvent.animateEffects(a);
                    }
                }
            });
            const __exports = __callInstance223.exports;
            return __exports.data();
        })();
    },
    eventOverallEndTime: function () {
        return this.kpfEvent.eventOverallEndTime;
    }
});
var KPFEvent = Class.create({
    initialize: function (a) {
        this.slideId = a.slideId;
        this.slideIndex = a.slideIndex;
        this.sceneIndex = a.sceneIndex;
        this.animationSupported = a.animationSupported;
        this.event = a.event;
        this.baseLayer = {};
        this.effects = [];
        this.cssRenderer = {};
        this.eventOverallEndTime = 0;
        (() => {
            const __callInstance222 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.overallEndTimeInternal();
                    }
                }
            });
            const __exports = __callInstance222.exports;
            return __exports.data();
        })();
    },
    destroy: function () {
        (() => {
            const __callInstance221 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.baseLayer.destroy();
                    }
                }
            });
            const __exports = __callInstance221.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance220 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.cssRenderer.destroy();
                    }
                }
            });
            const __exports = __callInstance220.exports;
            return __exports.data();
        })();
        (() => {
            var a = 0, b = this.effects.length;
            const __forInstance0 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < b ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance219 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.effects[a].destroy();
                                        }
                                    }
                                });
                                const __exports = __callInstance219.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance0.exports;
            return __exports.data();
        })();
        delete this.baseLayer;
        delete this.cssRenderer;
        delete this.effects;
        delete this.event;
        this.slideId = null;
        this.slideIndex = null;
        this.sceneIndex = null;
        this.animationSupported = null;
        this.eventOverallEndTime = null;
    },
    addAnimationsToIdenticalLayer: function (c, f) {
        (() => {
            const __ifInstance1 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                var b = 0, e = c.animations.length;
                                const __forInstance1 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return b < e ? 1 : 0;
                                        },
                                        update: () => {
                                            b++;
                                        },
                                        body: () => {
                                            {
                                                (() => {
                                                    const __callInstance218 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                f.animations.push(c.animations[b]);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance218.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance1.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance1.exports;
            return __exports.data(c.animations && c.animations.length > 0 ? 1 : 0);
        })();
        (() => {
            const __ifInstance2 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                var a = 0, d = c.layers.length;
                                const __forInstance2 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return a < d ? 1 : 0;
                                        },
                                        update: () => {
                                            a++;
                                        },
                                        body: () => {
                                            {
                                                (() => {
                                                    const __callInstance217 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.addAnimationsToIdenticalLayer(c.layers[a], f.layers[a]);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance217.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance2.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance2.exports;
            return __exports.data(c.layers && c.layers.length > 0 ? 1 : 0);
        })();
    },
    processEffects: function (a) {
        var d = [];
        for (var h = 0; h < a.length; h++) {
            var m = a[h];
            if (m.type === lS(0, 0)) {
                var f = false;
                var l;
                for (var g = 0, b = d.length; g < b; g++) {
                    if (d[g].type === lS(0, 1) && d[g].objectID === m.objectID) {
                        l = g;
                        f = true;
                        break;
                    }
                }
                (() => {
                    const __ifInstance3 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    (() => {
                                        const __callInstance216 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    this.addAnimationsToIdenticalLayer(m.baseLayer, d[l].baseLayer);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance216.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __ifInstance4 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        d[l].beginTime = m.beginTime;
                                                    }
                                                },
                                                impFunc2: () => {
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance4.exports;
                                        return __exports.data(m.beginTime < d[l].beginTime ? 1 : 0);
                                    })();
                                    (() => {
                                        const __ifInstance5 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        d[l].duration = m.beginTime + m.duration;
                                                    }
                                                },
                                                impFunc2: () => {
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance5.exports;
                                        return __exports.data(m.beginTime + m.duration > d[l].beginTime + d[l].duration ? 1 : 0);
                                    })();
                                    (() => {
                                        var e = 0, c = m.effects.length;
                                        const __forInstance3 = new WebAssembly.Instance(__forWasmModule, {
                                            env: {
                                                test: () => {
                                                    return e < c ? 1 : 0;
                                                },
                                                update: () => {
                                                    e++;
                                                },
                                                body: () => {
                                                    {
                                                        (() => {
                                                            const __callInstance215 = new WebAssembly.Instance(__callWasmModule, {
                                                                env: {
                                                                    impFunc: () => {
                                                                        d[l].effects.push(m.effects[e]);
                                                                    }
                                                                }
                                                            });
                                                            const __exports = __callInstance215.exports;
                                                            return __exports.data();
                                                        })();
                                                    }
                                                }
                                            }
                                        });
                                        const __exports = __forInstance3.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __ifInstance6 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        d[l].names = [];
                                                    }
                                                },
                                                impFunc2: () => {
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance6.exports;
                                        return __exports.data(d[l].names == null ? 1 : 0);
                                    })();
                                    (() => {
                                        const __callInstance214 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    d[l].names.push(m.name);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance214.exports;
                                        return __exports.data();
                                    })();
                                }
                            },
                            impFunc2: () => {
                                {
                                    (() => {
                                        const __callInstance213 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    d.push(m);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance213.exports;
                                        return __exports.data();
                                    })();
                                }
                            }
                        }
                    });
                    const __exports = __ifInstance3.exports;
                    return __exports.data(f ? 1 : 0);
                })();
            } else {
                (() => {
                    const __callInstance212 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                d.push(m);
                            }
                        }
                    });
                    const __exports = __callInstance212.exports;
                    return __exports.data();
                })();
            }
        }
        (() => {
            var h = 0, b = d.length;
            const __forInstance4 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return h < b ? 1 : 0;
                    },
                    update: () => {
                        h++;
                    },
                    body: () => {
                        {
                            d[h].effects = this.processEffects(d[h].effects);
                        }
                    }
                }
            });
            const __exports = __forInstance4.exports;
            return __exports.data();
        })();
        return d;
    },
    renderEffects: function (b) {
        var k = [];
        (() => {
            var e = 0, c = b.length;
            const __forInstance5 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return e < c ? 1 : 0;
                    },
                    update: () => {
                        e++;
                    },
                    body: () => {
                        {
                            var h = new KPFEffect(b[e], this.animationSupported);
                            var f = false;
                            (() => {
                                const __callInstance211 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.cssRenderer.initRendererFlags(h);
                                        }
                                    }
                                });
                                const __exports = __callInstance211.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __ifInstance7 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance210 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.renderAudioOnlyEffect(h);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance210.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                (() => {
                                                    const __ifInstance8 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        var d = 0, m = this.effects.length;
                                                                        const __forInstance6 = new WebAssembly.Instance(__forWasmModule, {
                                                                            env: {
                                                                                test: () => {
                                                                                    return d < m ? 1 : 0;
                                                                                },
                                                                                update: () => {
                                                                                    d++;
                                                                                },
                                                                                body: () => {
                                                                                    {
                                                                                        (() => {
                                                                                            const __ifInstance9 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                env: {
                                                                                                    impFunc1: () => {
                                                                                                        {
                                                                                                            (() => {
                                                                                                                const __ifInstance10 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                    env: {
                                                                                                                        impFunc1: () => {
                                                                                                                            {
                                                                                                                                f = true;
                                                                                                                            }
                                                                                                                        },
                                                                                                                        impFunc2: () => {
                                                                                                                            {
                                                                                                                                f = false;
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                });
                                                                                                                const __exports = __ifInstance10.exports;
                                                                                                                return __exports.data(this.effects[d].type === lS(0, 3) ? 1 : 0);
                                                                                                            })();
                                                                                                        }
                                                                                                    },
                                                                                                    impFunc2: () => {
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __ifInstance9.exports;
                                                                                            return __exports.data(this.effects[d].objectID === h.objectID ? 1 : 0);
                                                                                        })();
                                                                                    }
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __forInstance6.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance8.exports;
                                                    return __exports.data(h.type === lS(0, 2) ? 1 : 0);
                                                })();
                                                (() => {
                                                    const __ifInstance11 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    var g = new KPFLayer(h.baseLayer, {
                                                                        animationSupported: this.animationSupported,
                                                                        name: h.name,
                                                                        type: h.type
                                                                    });
                                                                    var l = document.getElementById(lS(0, 4) + this.baseLayer.layerId);
                                                                    var a = l.parentNode;
                                                                    var n = document.createElement(lS(0, 5));
                                                                    (() => {
                                                                        const __callInstance209 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    n.setAttribute(lS(0, 6), lS(0, 7) + g.layerId);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance209.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                    this.baseLayer = g;
                                                                    h.kpfLayer = g;
                                                                    this.cssRenderer.layer = g;
                                                                    this.cssRenderer.domNode = n;
                                                                    (() => {
                                                                        const __callInstance208 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    this.cssRenderer.draw(a);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance208.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                    (() => {
                                                                        const __callInstance207 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    a.removeChild(l);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance207.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance206 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    this.renderEffect(this.baseLayer, h, f);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance206.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance11.exports;
                                                    return __exports.data(this.baseLayer.objectID === h.objectID ? 1 : 0);
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance7.exports;
                                return __exports.data(h.baseLayer == null ? 1 : 0);
                            })();
                            (() => {
                                const __callInstance205 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.effects.push(h);
                                        }
                                    }
                                });
                                const __exports = __callInstance205.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance204 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            k.push(h);
                                        }
                                    }
                                });
                                const __exports = __callInstance204.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance5.exports;
            return __exports.data();
        })();
        return k;
    },
    renderEffect: function (b, g, f) {
        var d;
        for (var e = 0, c = b.layers.length; e < c; e++) {
            (() => {
                const __ifInstance12 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                var h = new KPFLayer(g.baseLayer, {
                                    animationSupported: this.animationSupported,
                                    name: g.name,
                                    type: g.type
                                }, b.bounds.offset);
                                var j = lS(0, 8) + b.layers[e].layerId;
                                var k = document.getElementById(lS(0, 9) + b.layers[e].layerId);
                                var a = k.parentNode;
                                g.kpfLayer = h;
                                (() => {
                                    const __ifInstance13 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    b.layers[e] = h;
                                                    var l = this.cssRenderer.createNodes(a, b, h);
                                                    (() => {
                                                        const __callInstance203 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    a.replaceChild(l, k);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance203.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    g.currentKPFLayer = b.layers[e];
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance13.exports;
                                    return __exports.data(!f ? 1 : 0);
                                })();
                                d = true;
                            }
                        },
                        impFunc2: () => {
                            {
                                d = this.renderEffect(b.layers[e], g, f);
                            }
                        }
                    }
                });
                const __exports = __ifInstance12.exports;
                return __exports.data(b.layers[e].objectID === g.objectID ? 1 : 0);
            })();
            if (d) {
                break;
            }
        }
        return d;
    },
    renderEvent: function (a) {
        var b = { animationSupported: this.animationSupported };
        (() => {
            const __ifInstance14 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            b.name = this.event.effects[0].name;
                            b.type = this.event.effects[0].type;
                            b.objectID = this.event.effects[0].objectID;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance14.exports;
            return __exports.data(this.event.effects && this.event.effects.length === 1 ? 1 : 0);
        })();
        this.baseLayer = new KPFLayer(this.event.baseLayer, b);
        this.cssRenderer = new KPFCssRenderer(this.baseLayer, this.sceneIndex, this.animationSupported, this.effects);
        (() => {
            const __callInstance202 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.cssRenderer.draw(a);
                    }
                }
            });
            const __exports = __callInstance202.exports;
            return __exports.data();
        })();
    },
    renderAudioOnlyEffect: function (e) {
        if (e.name != lS(0, 10)) {
            return;
        }
        var b = e.movie;
        if (!b.isAudioOnly) {
            return;
        }
        (() => {
            const __ifInstance15 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            gShowController.audioCache = {};
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance15.exports;
            return __exports.data(gShowController.audioCache == null ? 1 : 0);
        })();
        var a = b.asset + lS(0, 11);
        var d = gShowController.audioCache[a];
        (() => {
            const __ifInstance16 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            var c = gShowController.textureManager.urlForAsset(b.asset, this.slideId);
                            d = new Audio(c);
                            (() => {
                                const __ifInstance17 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __ifInstance18 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    d.loop = true;
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance18.exports;
                                                    return __exports.data(b.loopMode && b.loopMode === lS(0, 12) ? 1 : 0);
                                                })();
                                                (() => {
                                                    const __ifInstance19 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    d.volume = b.volume;
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance19.exports;
                                                    return __exports.data(b.volume ? 1 : 0);
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance17.exports;
                                return __exports.data(b ? 1 : 0);
                            })();
                            gShowController.audioCache[a] = d;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance16.exports;
            return __exports.data(d == null ? 1 : 0);
        })();
        (() => {
            const __callInstance201 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        d.play();
                    }
                }
            });
            const __exports = __callInstance201.exports;
            return __exports.data();
        })();
    },
    animateEffects: function (c) {
        (() => {
            var a = 0, b = c.length;
            const __forInstance7 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < b ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance200 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.animateEffect(c[a]);
                                        }
                                    }
                                });
                                const __exports = __callInstance200.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance7.exports;
            return __exports.data();
        })();
    },
    animateEffect: function (a) {
        (() => {
            const __callInstance199 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.cssRenderer.animate(a);
                    }
                }
            });
            const __exports = __callInstance199.exports;
            return __exports.data();
        })();
        (() => {
            const __ifInstance20 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance198 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setTimeout(this.handleEffectDidComplete.bind(this, a), (a.beginTime + a.duration) * 1000);
                                        }
                                    }
                                });
                                const __exports = __callInstance198.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance20.exports;
            return __exports.data(a.effects.length > 0 ? 1 : 0);
        })();
    },
    handleEffectDidComplete: function (b) {
        var d = this.renderEffects(b.effects);
        (() => {
            var a = 0, c = d.length;
            const __forInstance8 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < c ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance197 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.animateEffect(d[a]);
                                        }
                                    }
                                });
                                const __exports = __callInstance197.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance8.exports;
            return __exports.data();
        })();
    },
    overallEndTime: function () {
        return this.eventOverallEndTime;
    },
    overallEndTimeInternal: function () {
        (() => {
            var a = 0, d = this.event.effects.length;
            const __forInstance9 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < d ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            var c = 0;
                            var b = this.event.effects[a];
                            (() => {
                                const __callInstance196 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.calculateOverallEndTime(c, b);
                                        }
                                    }
                                });
                                const __exports = __callInstance196.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance9.exports;
            return __exports.data();
        })();
    },
    calculateOverallEndTime: function (e, c) {
        var b = e + c.beginTime + c.duration;
        (() => {
            const __ifInstance21 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.eventOverallEndTime = b;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance21.exports;
            return __exports.data(b > this.eventOverallEndTime ? 1 : 0);
        })();
        (() => {
            var a = 0, d = c.effects.length;
            const __forInstance10 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < d ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance195 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.calculateOverallEndTime(b, c.effects[a]);
                                        }
                                    }
                                });
                                const __exports = __callInstance195.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance10.exports;
            return __exports.data();
        })();
    }
});
var KPFEffect = Class.create({
    initialize: function (b, a) {
        this.type = b.type;
        this.name = b.name;
        this.beginTime = b.beginTime;
        this.duration = b.duration;
        this.objectID = b.objectID;
        this.baseLayer = b.baseLayer;
        (() => {
            const __ifInstance22 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.movie = b.movie;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance22.exports;
            return __exports.data(b.movie ? 1 : 0);
        })();
        this.effects = [];
        (() => {
            const __callInstance194 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.addSubEffect(b.effects, a);
                    }
                }
            });
            const __exports = __callInstance194.exports;
            return __exports.data();
        })();
    },
    destroy: function () {
        (() => {
            var a = 0, b = this.effects.length;
            const __forInstance11 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < b ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance193 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.destroyEffect(this.effects[a]);
                                        }
                                    }
                                });
                                const __exports = __callInstance193.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance11.exports;
            return __exports.data();
        })();
        this.type = null;
        this.name = null;
        this.beginTime = null;
        this.duration = null;
        this.objectID = null;
        delete this.kpfLayer;
        delete this.effects;
        delete this.baseLayer;
        (() => {
            const __ifInstance23 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            delete this.movie;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance23.exports;
            return __exports.data(this.movie ? 1 : 0);
        })();
        (() => {
            const __ifInstance24 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            delete this.currentKPFLayer;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance24.exports;
            return __exports.data(this.currentKPFLayer ? 1 : 0);
        })();
    },
    destroyEffect: function (b) {
        (() => {
            var a = 0, c = b.effects.length;
            const __forInstance12 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < c ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance192 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.destroyEffect(b.effects[a]);
                                        }
                                    }
                                });
                                const __exports = __callInstance192.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance12.exports;
            return __exports.data();
        })();
        b.type = null;
        b.name = null;
        b.beginTime = null;
        b.duration = null;
        b.objectID = null;
        delete b.kpfLayer;
        delete b.effects;
        delete b.baseLayer;
        (() => {
            const __ifInstance25 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            delete b.movie;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance25.exports;
            return __exports.data(b.movie ? 1 : 0);
        })();
        (() => {
            const __ifInstance26 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            delete b.currentKPFLayer;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance26.exports;
            return __exports.data(b.currentKPFLayer ? 1 : 0);
        })();
    },
    addSubEffect: function (c, a) {
        (() => {
            var b = 0, e = c.length;
            const __forInstance13 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return b < e ? 1 : 0;
                    },
                    update: () => {
                        b++;
                    },
                    body: () => {
                        {
                            var d = new KPFEffect(c[b], a);
                            (() => {
                                const __callInstance191 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.effects.push(d);
                                        }
                                    }
                                });
                                const __exports = __callInstance191.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance13.exports;
            return __exports.data();
        })();
    }
});
var KPFCssRenderer = Class.create({
    initialize: function (b, d, a, c) {
        this.textureId = b.textureId;
        this.nativeWidth = b.bounds.width;
        this.nativeHeight = b.bounds.height;
        this.opacity = b.opacity;
        this.visibility = b.hidden === true ? lS(0, 13) : lS(0, 14);
        this.textureTransform = b.textureTransform;
        this.affineTransform = b.affineTransform;
        this.anchorPoint = b.anchorPoint;
        this.contentsRect = b.contentsRect;
        this.layer = b;
        this.sceneIndex = d;
        this.animationSupported = a;
        this.enableCompositingUsingBackface = false;
        this.enablePreserve3DFromParent = false;
        (() => {
            const __ifInstance27 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance190 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.initRendererFlags(c[0]);
                                        }
                                    }
                                });
                                const __exports = __callInstance190.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance27.exports;
            return __exports.data(c.length > 0 ? 1 : 0);
        })();
        this.domNode = document.createElement(lS(0, 15));
        (() => {
            const __callInstance189 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.domNode.setAttribute(lS(0, 16), lS(0, 17) + b.layerId);
                    }
                }
            });
            const __exports = __callInstance189.exports;
            return __exports.data();
        })();
    },
    initRendererFlags: function (a) {
        (() => {
            const __ifInstance28 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.enableCompositingUsingBackface = true;
                            this.enablePreserve3DFromParent = true;
                            (() => {
                                const __ifInstance29 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                this.enableCompositingUsingBackface = false;
                                                this.enablePreserve3DFromParent = false;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance29.exports;
                                return __exports.data(isChrome && (a.name === lS(0, 21) || a.name === lS(0, 22)) ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                        {
                            this.enableCompositingUsingBackface = false;
                            this.enablePreserve3DFromParent = false;
                        }
                    }
                }
            });
            const __exports = __ifInstance28.exports;
            return __exports.data(a.type === lS(0, 18) && a.name != lS(0, 19) && a.name != lS(0, 20) ? 1 : 0);
        })();
        (() => {
            const __ifInstance30 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.isGridTransition = true;
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                const __ifInstance31 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                this.isMosaicTransition = true;
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                (() => {
                                                    const __ifInstance32 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    this.isSwooshTransition = true;
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance32.exports;
                                                    return __exports.data(a.name === lS(0, 25) && a.type === lS(0, 26) ? 1 : 0);
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance31.exports;
                                return __exports.data(a.name === lS(0, 24) ? 1 : 0);
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance30.exports;
            return __exports.data(a.name === lS(0, 23) ? 1 : 0);
        })();
    },
    destroy: function () {
        this.textureId = null;
        this.nativeWidth = null;
        this.nativeHeight = null;
        this.opacity = null;
        this.visibility = null;
        this.textureTransform = null;
        this.affineTransform = null;
        this.anchorPoint = null;
        this.textureAnimation = null;
        this.contentsRect = null;
        this.requiresPerspectiveTransform = null;
        this.sceneIndex = null;
        (() => {
            const __ifInstance33 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __forInstance32 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return this.domNode.childNodes.length > 0 ? 1 : 0;
                                        },
                                        update: () => {
                                        },
                                        body: () => {
                                            {
                                                (() => {
                                                    const __callInstance188 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.domNode.removeChild(this.domNode.firstChild);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance188.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance32.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance33.exports;
            return __exports.data(this.domNode.hasChildNodes() ? 1 : 0);
        })();
        this.domNode = null;
    },
    addAnimationNode: function (d, c, a, b) {
        if (c == null) {
            return d;
        }
        var e = c.shift();
        if (e == null) {
            return d;
        }
        var g = document.createElement(lS(0, 27));
        var f = a + lS(0, 28) + escapeTextureId(e);
        (() => {
            const __callInstance187 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        g.setAttribute(lS(0, 29), f);
                    }
                }
            });
            const __exports = __callInstance187.exports;
            return __exports.data();
        })();
        (() => {
            const __ifInstance34 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance186 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(g, lS(0, 30), lS(0, 31));
                                        }
                                    }
                                });
                                const __exports = __callInstance186.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance34.exports;
            return __exports.data(b.initialState.masksToBounds ? 1 : 0);
        })();
        (() => {
            const __ifInstance35 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance185 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(g, kBackfaceVisibilityPropertyName, lS(0, 32));
                                        }
                                    }
                                });
                                const __exports = __callInstance185.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                const __ifInstance36 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance184 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(g, kTransformPropertyName, lS(0, 33));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance184.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance36.exports;
                                return __exports.data(this.isSwooshTransition ? 1 : 0);
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance35.exports;
            return __exports.data(this.enableCompositingUsingBackface ? 1 : 0);
        })();
        (() => {
            const __callInstance183 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.setStyle(g, lS(0, 34), lS(0, 35), d.style.width, d.style.height, kPositionAbsolutePropertyValue, null, null);
                    }
                }
            });
            const __exports = __callInstance183.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance182 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        setElementProperty(g, kTransformStylePropertyName, kTransformStylePreserve3DPropertyValue);
                    }
                }
            });
            const __exports = __callInstance182.exports;
            return __exports.data();
        })();
        (() => {
            const __ifInstance37 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance181 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(g, kTransformOriginPropertyName, b.anchorPoint.pointX * 100 + lS(0, 36) + b.anchorPoint.pointY * 100 + lS(0, 37));
                                        }
                                    }
                                });
                                const __exports = __callInstance181.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance37.exports;
            return __exports.data(b.anchorPoint.pointX != 0.5 || b.anchorPoint.pointY != 0.5 ? 1 : 0);
        })();
        (() => {
            const __ifInstance38 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance39 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __ifInstance40 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance180 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    setElementProperty(g, kTransformOriginPropertyName, b.anchorPoint.pointX * 100 + lS(0, 42) + b.anchorPoint.pointY * 100 + lS(0, 43) + b.transformOriginZValue + lS(0, 44));
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance180.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance179 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    setElementProperty(g, kTransformOriginZPropertyName, b.transformOriginZValue + lS(0, 45));
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance179.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                    (() => {
                                                                        const __ifInstance41 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        (() => {
                                                                                            const __callInstance178 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                env: {
                                                                                                    impFunc: () => {
                                                                                                        setElementProperty(g, kTransformPropertyName, lS(0, 47) + b.transformOriginZValue + lS(0, 48));
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __callInstance178.exports;
                                                                                            return __exports.data();
                                                                                        })();
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance41.exports;
                                                                        return __exports.data(navigator.userAgent.lastIndexOf(lS(0, 46)) <= 0 ? 1 : 0);
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance40.exports;
                                                    return __exports.data(Prototype.Browser.Gecko ? 1 : 0);
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance39.exports;
                                return __exports.data(e != lS(0, 41) ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance38.exports;
            return __exports.data(b.transformOriginZValue != lS(0, 38) && e != lS(0, 39) && e != lS(0, 40) ? 1 : 0);
        })();
        (() => {
            const __callInstance177 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        d.appendChild(g);
                    }
                }
            });
            const __exports = __callInstance177.exports;
            return __exports.data();
        })();
        return this.addAnimationNode(g, c, a, b);
    },
    createNodes: function (a, c, b) {
        var d = this.addNode(a, c, b);
        return d;
    },
    addNode: function (o, s, d) {
        var t = lS(0, 49) + d.layerId;
        var K = document.createElement(lS(0, 50));
        (() => {
            const __callInstance176 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        K.setAttribute(lS(0, 51), t);
                    }
                }
            });
            const __exports = __callInstance176.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance175 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        setElementProperty(K, lS(0, 52), lS(0, 53));
                    }
                }
            });
            const __exports = __callInstance175.exports;
            return __exports.data();
        })();
        var B = d.contentsRect.x;
        var A = d.contentsRect.y;
        var C = d.contentsRect.width;
        var J = d.contentsRect.height;
        var R = d.affineTransform[0];
        var P = d.affineTransform[1];
        var O = d.affineTransform[2];
        var N = d.affineTransform[3];
        var M = d.affineTransform[4];
        var L = d.affineTransform[5];
        var r = lS(0, 54) + R + lS(0, 55) + P + lS(0, 56) + O + lS(0, 57) + N + lS(0, 58) + (M + d.bounds.offset.pointX) + lS(0, 59) + (L + d.bounds.offset.pointY) + lS(0, 60);
        (() => {
            const __callInstance174 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.setStyle(K, lS(0, 61), lS(0, 62), d.bounds.width + lS(0, 63), d.bounds.height + lS(0, 64), kPositionAbsolutePropertyValue, d.opacity, d.visibility);
                    }
                }
            });
            const __exports = __callInstance174.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance173 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        setElementProperty(K, kTransformPropertyName, r);
                    }
                }
            });
            const __exports = __callInstance173.exports;
            return __exports.data();
        })();
        (() => {
            const __ifInstance42 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance172 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(K, kTransformOriginPropertyName, d.anchorPoint.pointX * 100 + lS(0, 65) + d.anchorPoint.pointY * 100 + lS(0, 66));
                                        }
                                    }
                                });
                                const __exports = __callInstance172.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance42.exports;
            return __exports.data(d.anchorPoint.pointX != 0.5 || d.anchorPoint.pointY != 0.5 ? 1 : 0);
        })();
        (() => {
            const __ifInstance43 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance171 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(K, lS(0, 67), lS(0, 68));
                                        }
                                    }
                                });
                                const __exports = __callInstance171.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance43.exports;
            return __exports.data(d.initialState.masksToBounds ? 1 : 0);
        })();
        (() => {
            const __callInstance170 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        o.appendChild(K);
                    }
                }
            });
            const __exports = __callInstance170.exports;
            return __exports.data();
        })();
        var u;
        (() => {
            const __ifInstance44 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            u = this.addAnimationNode(K, d.divNames, t, d);
                        }
                    },
                    impFunc2: () => {
                        {
                            u = K;
                        }
                    }
                }
            });
            const __exports = __ifInstance44.exports;
            return __exports.data(this.animationSupported ? 1 : 0);
        })();
        (() => {
            const __ifInstance45 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance46 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance169 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(K, kTransformStylePropertyName, kTransformStylePreserve3DPropertyValue);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance169.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance46.exports;
                                return __exports.data(s.sublayerTransform[11] != 0 ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance47 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance168 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(K, kPerspectivePropertyName, gShowController.stageManager.perspective + lS(0, 69));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance168.exports;
                                                    return __exports.data();
                                                })();
                                                (() => {
                                                    const __callInstance167 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(K, kTransformStylePropertyName, kTransformStylePreserve3DPropertyValue);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance167.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance47.exports;
                                return __exports.data(d.sublayerTransform[11] != 0 ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                const __ifInstance48 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance166 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(o, kPerspectivePropertyName, gShowController.stageManager.perspective + lS(0, 70));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance166.exports;
                                                    return __exports.data();
                                                })();
                                                (() => {
                                                    const __callInstance165 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(K, kTransformStylePropertyName, kTransformStylePreserve3DPropertyValue);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance165.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                (() => {
                                                    const __callInstance164 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(K, kTransformStylePropertyName, kTransformStyleFlatPropertyValue);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance164.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance48.exports;
                                return __exports.data(s.sublayerTransform[11] != 0 ? 1 : 0);
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance45.exports;
            return __exports.data(d.isTransition && this.enablePreserve3DFromParent ? 1 : 0);
        })();
        (() => {
            const __ifInstance49 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance50 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance163 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(K, kBackfaceVisibilityPropertyName, lS(0, 71));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance163.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                (() => {
                                                    const __ifInstance51 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance162 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    setElementProperty(K, kTransformPropertyName, lS(0, 72));
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance162.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance51.exports;
                                                    return __exports.data(this.isSwooshTransition ? 1 : 0);
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance50.exports;
                                return __exports.data(this.enableCompositingUsingBackface ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance49.exports;
            return __exports.data(isChrome ? 1 : 0);
        })();
        var z = d.textureId;
        if (z) {
            var v;
            var e;
            if (d.hasContentsAnimation) {
                var Q = d.cssAnimation.animations;
                for (var l = 0, G = Q.length; l < G; l++) {
                    if (Q[l].property === lS(0, 73)) {
                        z = Q[l].to.texture;
                        e = Q[l].from.texture;
                        break;
                    }
                }
            }
            var v = this.cloneNode(gShowController.textureManager.getTextureObject(this.sceneIndex, z));
            (() => {
                const __callInstance161 = new WebAssembly.Instance(__callWasmModule, {
                    env: {
                        impFunc: () => {
                            v.setAttribute(lS(0, 74), z);
                        }
                    }
                });
                const __exports = __callInstance161.exports;
                return __exports.data();
            })();
            (() => {
                const __ifInstance52 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __callInstance160 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                setElementProperty(v, kTransformPropertyName, lS(0, 76));
                                            }
                                        }
                                    });
                                    const __exports = __callInstance160.exports;
                                    return __exports.data();
                                })();
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance52.exports;
                return __exports.data(browserPrefix === lS(0, 75) && d.isTransition == null ? 1 : 0);
            })();
            (() => {
                const __ifInstance53 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __callInstance159 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.setStyle(v, lS(0, 77), lS(0, 78), d.bounds.width + lS(0, 79), d.bounds.height + lS(0, 80), kPositionAbsolutePropertyValue, null, null);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance159.exports;
                                    return __exports.data();
                                })();
                            }
                        },
                        impFunc2: () => {
                            {
                                var a, c;
                                (() => {
                                    const __ifInstance54 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    a = v.getAttribute(lS(0, 82));
                                                    c = v.getAttribute(lS(0, 83));
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    a = v.naturalWidth;
                                                    c = v.naturalHeight;
                                                    (() => {
                                                        const __ifInstance55 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        a = gShowController.script.slideWidth;
                                                                        c = gShowController.script.slideHeight;
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance55.exports;
                                                        return __exports.data(v.src.indexOf(lS(0, 84)) != -1 ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance54.exports;
                                    return __exports.data(v.nodeName.toLowerCase() === lS(0, 81) ? 1 : 0);
                                })();
                                var m = A * c;
                                var E = (B + C) * a;
                                var b = (A + J) * c;
                                var j = B * a;
                                (() => {
                                    const __callInstance158 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.setStyle(v, -m + lS(0, 85), -j + lS(0, 86), a + lS(0, 87), c + lS(0, 88), kPositionAbsolutePropertyValue, null, null);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance158.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance157 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                setElementProperty(v, lS(0, 89), lS(0, 90) + m + lS(0, 91) + E + lS(0, 92) + b + lS(0, 93) + j + lS(0, 94));
                                            }
                                        }
                                    });
                                    const __exports = __callInstance157.exports;
                                    return __exports.data();
                                })();
                            }
                        }
                    }
                });
                const __exports = __ifInstance53.exports;
                return __exports.data(B === 0 && A === 0 && C === 1 && J === 1 ? 1 : 0);
            })();
            (() => {
                const __ifInstance56 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __ifInstance57 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    (() => {
                                                        const __ifInstance58 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance59 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __callInstance156 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc: () => {
                                                                                                            setElementProperty(v, kBackfaceVisibilityPropertyName, lS(0, 95));
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __callInstance156.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance59.exports;
                                                                            return __exports.data(!this.isGridTransition && !this.isMosaicTransition ? 1 : 0);
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance60 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __callInstance155 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc: () => {
                                                                                                            setElementProperty(v, kTransformPropertyName, lS(0, 96));
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __callInstance155.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance60.exports;
                                                                            return __exports.data(this.isSwooshTransition ? 1 : 0);
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance58.exports;
                                                        return __exports.data(this.enableCompositingUsingBackface ? 1 : 0);
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    (() => {
                                                        const __ifInstance61 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance154 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        setElementProperty(v, kBackfaceVisibilityPropertyName, lS(0, 97));
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance154.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance153 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        setElementProperty(v, kTransformPropertyName, lS(0, 98));
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance153.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance61.exports;
                                                        return __exports.data(this.enableCompositingUsingBackface ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance57.exports;
                                    return __exports.data(isChrome ? 1 : 0);
                                })();
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance56.exports;
                return __exports.data(d.isTransition ? 1 : 0);
            })();
            var f = gShowController.textureManager.getTextureInfo(this.sceneIndex, d.textureId);
            var g;
            (() => {
                const __ifInstance62 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __ifInstance63 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    gShowController.movieCache = {};
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance63.exports;
                                    return __exports.data(gShowController.movieCache == null ? 1 : 0);
                                })();
                                var D = s.objectID + lS(0, 99);
                                d.hasMovie = true;
                                d.movieId = D;
                                g = gShowController.movieCache[D];
                                (() => {
                                    const __ifInstance64 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    g = document.createElement(lS(0, 100));
                                                    (() => {
                                                        const __callInstance152 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    setElementProperty(g, lS(0, 101), lS(0, 102));
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance152.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __callInstance151 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    this.setStyle(g, lS(0, 103), lS(0, 104), d.bounds.width + lS(0, 105), d.bounds.height + lS(0, 106), kPositionAbsolutePropertyValue, null, lS(0, 107));
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance151.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __callInstance150 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    g.setAttribute(lS(0, 108), D);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance150.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __callInstance149 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    g.setAttribute(lS(0, 109), gShowController.textureManager.getMovieUrl(this.sceneIndex, d.textureId));
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance149.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __ifInstance65 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance148 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        g.setAttribute(lS(0, 110), lS(0, 111));
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance148.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance65.exports;
                                                        return __exports.data(gShowController.isRecording === false ? 1 : 0);
                                                    })();
                                                    (() => {
                                                        const __callInstance147 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    Event.stopObserving(g, lS(0, 112));
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance147.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __callInstance146 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    Event.stopObserving(g, lS(0, 113));
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance146.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __callInstance145 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    Event.observe(g, lS(0, 114), this.handleMovieDidStart.bind(this, v, g));
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance145.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __callInstance144 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    Event.observe(g, lS(0, 115), this.handleMovieDidEnd.bind(this, v, g));
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance144.exports;
                                                        return __exports.data();
                                                    })();
                                                    gShowController.movieCache[D] = g;
                                                    (() => {
                                                        const __ifInstance66 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        v.style.visibility = lS(0, 117);
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance66.exports;
                                                        return __exports.data(d.animationInfo.type === lS(0, 116) ? 1 : 0);
                                                    })();
                                                    (() => {
                                                        const __ifInstance67 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        gShowController.movieCacheInfo = {};
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance67.exports;
                                                        return __exports.data(gShowController.movieCacheInfo == null ? 1 : 0);
                                                    })();
                                                    gShowController.movieCacheInfo[D] = {
                                                        objectID: s.objectID,
                                                        previousSibling: u.previousSibling.childNodes[0].id
                                                    };
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance64.exports;
                                    return __exports.data(g == null ? 1 : 0);
                                })();
                            }
                        },
                        impFunc2: () => {
                            {
                                (() => {
                                    const __ifInstance68 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    var D = s.objectID + lS(0, 118);
                                                    var I = gShowController.movieCacheInfo[D];
                                                    (() => {
                                                        const __ifInstance69 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance70 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            g = gShowController.movieCache[D];
                                                                                            (() => {
                                                                                                const __ifInstance71 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                delete gShowController.movieCacheInfo[D];
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance71.exports;
                                                                                                return __exports.data(d.animationInfo && d.animationInfo.type === lS(0, 119) && d.animationInfo.objectID === s.objectID ? 1 : 0);
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance70.exports;
                                                                            return __exports.data(d.textureId === I.previousSibling ? 1 : 0);
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance69.exports;
                                                        return __exports.data(I ? 1 : 0);
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance68.exports;
                                    return __exports.data(s.objectID && gShowController.movieCacheInfo ? 1 : 0);
                                })();
                            }
                        }
                    }
                });
                const __exports = __ifInstance62.exports;
                return __exports.data(f.movie ? 1 : 0);
            })();
            (() => {
                const __ifInstance72 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __callInstance143 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                v.setAttribute(lS(0, 120), lS(0, 121));
                                            }
                                        }
                                    });
                                    const __exports = __callInstance143.exports;
                                    return __exports.data();
                                })();
                                var q = document.createElement(lS(0, 122));
                                q.id = t + lS(0, 123);
                                (() => {
                                    const __callInstance142 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.setStyle(q, v.style.top, v.style.left, v.style.width, v.style.height, kPositionAbsolutePropertyValue, null, null);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance142.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance141 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                q.appendChild(v);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance141.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance140 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                u.appendChild(q);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance140.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance139 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                setElementProperty(q, lS(0, 124), 0);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance139.exports;
                                    return __exports.data();
                                })();
                                var n = gShowController.textureManager.getTextureObject(this.sceneIndex, e).cloneNode(true);
                                (() => {
                                    const __callInstance138 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                n.setAttribute(lS(0, 125), e);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance138.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance137 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.setStyle(n, lS(0, 126), lS(0, 127), d.bounds.width + lS(0, 128), d.bounds.height + lS(0, 129), kPositionAbsolutePropertyValue, null, null);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance137.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance136 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                setElementProperty(n, kBackfaceVisibilityPropertyName, lS(0, 130));
                                            }
                                        }
                                    });
                                    const __exports = __callInstance136.exports;
                                    return __exports.data();
                                })();
                                var k = document.createElement(lS(0, 131));
                                k.id = t + lS(0, 132);
                                (() => {
                                    const __callInstance135 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.setStyle(k, n.style.top, n.style.left, n.style.width, n.style.height, kPositionAbsolutePropertyValue, null, null);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance135.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance134 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                k.appendChild(n);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance134.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance133 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                u.appendChild(k);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance133.exports;
                                    return __exports.data();
                                })();
                            }
                        },
                        impFunc2: () => {
                            {
                                (() => {
                                    const __callInstance132 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                u.appendChild(v);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance132.exports;
                                    return __exports.data();
                                })();
                            }
                        }
                    }
                });
                const __exports = __ifInstance72.exports;
                return __exports.data(d.hasContentsAnimation ? 1 : 0);
            })();
            (() => {
                const __ifInstance73 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __callInstance131 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                u.insertBefore(g, v);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance131.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __ifInstance74 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    v.style.visibility = lS(0, 133);
                                                    (() => {
                                                        const __ifInstance75 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance76 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __ifInstance77 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                (() => {
                                                                                                                    const __callInstance130 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                g.play();
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance130.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance77.exports;
                                                                                                return __exports.data(!g.isEnded && d.animationInfo.type != lS(0, 134) ? 1 : 0);
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __ifInstance78 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                (() => {
                                                                                                                    const __callInstance129 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                g.play();
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance129.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance78.exports;
                                                                                                return __exports.data(!g.isEnded ? 1 : 0);
                                                                                            })();
                                                                                        }
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance76.exports;
                                                                            return __exports.data(d.animationInfo.objectID === s.objectID ? 1 : 0);
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance75.exports;
                                                        return __exports.data(d.animationInfo ? 1 : 0);
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance74.exports;
                                    return __exports.data(g.isPlaying ? 1 : 0);
                                })();
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance73.exports;
                return __exports.data(g ? 1 : 0);
            })();
        } else {
            (() => {
                const __ifInstance79 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                var F = d.initialState.backgroundColor;
                                (() => {
                                    const __callInstance128 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                setElementProperty(u, lS(0, 135), lS(0, 136) + parseInt(F[0] * 255) + lS(0, 137) + parseInt(F[1] * 255) + lS(0, 138) + parseInt(F[2] * 255) + lS(0, 139) + F[3] + lS(0, 140));
                                            }
                                        }
                                    });
                                    const __exports = __callInstance128.exports;
                                    return __exports.data();
                                })();
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance79.exports;
                return __exports.data(d.initialState.backgroundColor ? 1 : 0);
            })();
        }
        (() => {
            var H = 0, p = d.layers.length;
            const __forInstance14 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return H < p ? 1 : 0;
                    },
                    update: () => {
                        H++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance127 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.addNode(u, d, d.layers[H]);
                                        }
                                    }
                                });
                                const __exports = __callInstance127.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance14.exports;
            return __exports.data();
        })();
        return K;
    },
    cloneNode: function (d) {
        var f = d.cloneNode(true);
        (() => {
            const __ifInstance80 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            var e = d.getElementsByTagName(lS(0, 142));
                            (() => {
                                const __ifInstance81 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                var b = f.getElementsByTagName(lS(0, 143));
                                                (() => {
                                                    var a = 0, c = e.length;
                                                    const __forInstance15 = new WebAssembly.Instance(__forWasmModule, {
                                                        env: {
                                                            test: () => {
                                                                return a < c ? 1 : 0;
                                                            },
                                                            update: () => {
                                                                a++;
                                                            },
                                                            body: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance126 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    b[a].setAttribute(lS(0, 144), e[a].getAttribute(lS(0, 145)));
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance126.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    });
                                                    const __exports = __forInstance15.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance81.exports;
                                return __exports.data(e ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance80.exports;
            return __exports.data(browserPrefix === lS(0, 141) && browserVersion >= 10 ? 1 : 0);
        })();
        return f;
    },
    serializeSvg: function (e) {
        var f = e.getElementsByTagName(lS(0, 146));
        (() => {
            var d = 0, b = f.length;
            const __forInstance16 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return d < b ? 1 : 0;
                    },
                    update: () => {
                        d++;
                    },
                    body: () => {
                        {
                            var a = f[d];
                            var g = document.createElement(lS(0, 147));
                            g.href = a.getAttributeNS(lS(0, 148), lS(0, 149));
                            var j = window.location.protocol + lS(0, 150) + g.host + g.pathname;
                            (() => {
                                const __callInstance125 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            a.setAttributeNS(lS(0, 151), lS(0, 152), j);
                                        }
                                    }
                                });
                                const __exports = __callInstance125.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance16.exports;
            return __exports.data();
        })();
        var h = new XMLSerializer();
        var c = h.serializeToString(e);
        return c;
    },
    draw: function (a) {
        (() => {
            const __callInstance124 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.setStyle(this.domNode, lS(0, 153), lS(0, 154), this.nativeWidth + lS(0, 155), this.nativeHeight + lS(0, 156), kPositionAbsolutePropertyValue, this.opacity, this.visibility);
                    }
                }
            });
            const __exports = __callInstance124.exports;
            return __exports.data();
        })();
        (() => {
            const __ifInstance82 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance83 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance123 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(this.domNode, kBackfaceVisibilityPropertyName, lS(0, 158));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance123.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                (() => {
                                                    const __callInstance122 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(this.domNode, kTransformPropertyName, lS(0, 159));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance122.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance83.exports;
                                return __exports.data(this.enableCompositingUsingBackface && isChrome ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance82.exports;
            return __exports.data(browserPrefix === lS(0, 157) ? 1 : 0);
        })();
        (() => {
            const __ifInstance84 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance121 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(this.domNode, kPerspectivePropertyName, gShowController.stageManager.perspective + lS(0, 160));
                                        }
                                    }
                                });
                                const __exports = __callInstance121.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance120 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(this.domNode, kTransformStylePropertyName, kTransformStylePreserve3DPropertyValue);
                                        }
                                    }
                                });
                                const __exports = __callInstance120.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                const __callInstance119 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(this.domNode, kTransformStylePropertyName, kTransformStyleFlatPropertyValue);
                                        }
                                    }
                                });
                                const __exports = __callInstance119.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance84.exports;
            return __exports.data(this.layer.sublayerTransform[11] != 0 ? 1 : 0);
        })();
        (() => {
            var b = 0, c = this.layer.layers.length;
            const __forInstance17 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return b < c ? 1 : 0;
                    },
                    update: () => {
                        b++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance118 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.createNodes(this.domNode, this.layer, this.layer.layers[b]);
                                        }
                                    }
                                });
                                const __exports = __callInstance118.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance17.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance117 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        a.appendChild(this.domNode);
                    }
                }
            });
            const __exports = __callInstance117.exports;
            return __exports.data();
        })();
    },
    setStyle: function (f, h, g, e, b, a, d, c) {
        f.style.top = h;
        f.style.left = g;
        f.style.width = e;
        f.style.height = b;
        f.style.position = a;
        (() => {
            const __ifInstance85 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            f.style.opacity = d;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance85.exports;
            return __exports.data(d != null && d != undefined ? 1 : 0);
        })();
        (() => {
            const __ifInstance86 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            f.style.visibility = c;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance86.exports;
            return __exports.data(c != null && c != undefined ? 1 : 0);
        })();
    },
    overallEndTime: function (a) {
        var b = {};
        b.duration = 0;
        (() => {
            const __callInstance116 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.overallEndTimeForLayer(this.layer, b);
                    }
                }
            });
            const __exports = __callInstance116.exports;
            return __exports.data();
        })();
        return b.duration;
    },
    overallEndTimeForLayer: function (b, c) {
        (() => {
            const __ifInstance87 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance88 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                c.duration = b.cssAnimation.overallEndTime;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance88.exports;
                                return __exports.data(b.cssAnimation.overallEndTime > c.duration ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance87.exports;
            return __exports.data(b.cssAnimation ? 1 : 0);
        })();
        (() => {
            var a = 0, d = b.layers.length;
            const __forInstance18 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < d ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance115 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.overallEndTimeForLayer(b.layers[a], c);
                                        }
                                    }
                                });
                                const __exports = __callInstance115.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance18.exports;
            return __exports.data();
        })();
    },
    animate: function (a) {
        (() => {
            const __ifInstance89 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance90 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __ifInstance91 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance114 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    this.animateEffect(a, a.kpfLayer, a.currentKPFLayer ? a.currentKPFLayer : null, a.movie);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance114.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance113 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    this.animateEffect(a, a.kpfLayer, a.currentKPFLayer ? a.currentKPFLayer : null);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance113.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance91.exports;
                                                    return __exports.data(a.movie ? 1 : 0);
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance90.exports;
                                return __exports.data(a.kpfLayer ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance89.exports;
            return __exports.data(this.animationSupported ? 1 : 0);
        })();
    },
    animateEffect: function (o, a, j, e) {
        (() => {
            const __ifInstance92 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            var g = j ? lS(0, 161) + j.layerId : lS(0, 162) + a.layerId;
                            var d = document.getElementById(g);
                            (() => {
                                const __ifInstance93 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance112 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.applyCssAnimation(d, a, j);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance112.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance93.exports;
                                return __exports.data(d ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                const __ifInstance94 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                var n = document.getElementById(a.movieId);
                                                (() => {
                                                    const __ifInstance95 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __ifInstance96 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        n.loop = true;
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance96.exports;
                                                                        return __exports.data(e.loopMode && e.loopMode === lS(0, 164) ? 1 : 0);
                                                                    })();
                                                                    (() => {
                                                                        const __ifInstance97 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        n.volume = e.volume;
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance97.exports;
                                                                        return __exports.data(e.volume ? 1 : 0);
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance95.exports;
                                                    return __exports.data(e ? 1 : 0);
                                                })();
                                                (() => {
                                                    const __callInstance111 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.startMovie(n);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance111.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance94.exports;
                                return __exports.data(a.hasMovie && a.animationInfo.name === lS(0, 163) ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance98 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                var b = document.getElementById(lS(0, 165) + j.layerId);
                                                var k = window.getComputedStyle(b, null);
                                                var l = k.getPropertyValue(kTransformPropertyName);
                                                var f = parseTransformMatrix(l);
                                                var m = lS(0, 166) + f[0] + lS(0, 167) + f[1] + lS(0, 168) + f[2] + lS(0, 169) + f[3] + lS(0, 170) + a.bounds.offset.pointX + lS(0, 171) + a.bounds.offset.pointY + lS(0, 172);
                                                (() => {
                                                    const __ifInstance99 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance110 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    setElementProperty(b, kTransformPropertyName, m);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance110.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance99.exports;
                                                    return __exports.data(o.name === lS(0, 173) ? 1 : 0);
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance98.exports;
                                return __exports.data(j ? 1 : 0);
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance92.exports;
            return __exports.data(a.cssAnimationRules.length > 0 ? 1 : 0);
        })();
        (() => {
            var h = 0, c = a.layers.length;
            const __forInstance19 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return h < c ? 1 : 0;
                    },
                    update: () => {
                        h++;
                    },
                    body: () => {
                        {
                            (() => {
                                const __callInstance109 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.animateEffect(o, a.layers[h], j ? j.layers[h] : null, e);
                                        }
                                    }
                                });
                                const __exports = __callInstance109.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance19.exports;
            return __exports.data();
        })();
    },
    applyCssAnimation: function (v, d, I) {
        var Q = d.cssAnimation;
        var y = d.cssAnimationRules;
        var P = d.cssAnimation.overallEndTime;
        (() => {
            const __ifInstance100 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance101 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance108 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.stopMovie(document.getElementById(d.movieId));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance108.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance101.exports;
                                return __exports.data(d.animationInfo.type === lS(0, 174) ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance100.exports;
            return __exports.data(d.hasMovie ? 1 : 0);
        })();
        (() => {
            const __ifInstance102 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __ifInstance103 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                v.style.visibility = lS(0, 176);
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance103.exports;
                                return __exports.data(d.layers.length === 0 && d.contentsRect.x === 0 && d.contentsRect.y === 0 && d.contentsRect.width === 1 && d.contentsRect.height === 1 ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance102.exports;
            return __exports.data(isChrome && d.animationInfo.name === lS(0, 175) ? 1 : 0);
        })();
        for (var E in Q.keyAnimations) {
            if (E != lS(0, 177)) {
                continue;
            }
            var r = Q.keyAnimations[E];
            var w = document.styleSheets[1].cssRules;
            (() => {
                var W = 0, aa = w.length;
                const __forInstance20 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return W < aa ? 1 : 0;
                        },
                        update: () => {
                            W++;
                        },
                        body: () => {
                            {
                                var s = w[W];
                                var A = v.id + lS(0, 178) + E;
                                (() => {
                                    const __ifInstance104 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    (() => {
                                                        const __forInstance33 = new WebAssembly.Instance(__forWasmModule, {
                                                            env: {
                                                                test: () => {
                                                                    return s.cssRules.length > 0 ? 1 : 0;
                                                                },
                                                                update: () => {
                                                                },
                                                                body: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance105 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                var V = 0, B = s.cssRules.length;
                                                                                                const __forInstance21 = new WebAssembly.Instance(__forWasmModule, {
                                                                                                    env: {
                                                                                                        test: () => {
                                                                                                            return V < B ? 1 : 0;
                                                                                                        },
                                                                                                        update: () => {
                                                                                                            V++;
                                                                                                        },
                                                                                                        body: () => {
                                                                                                            {
                                                                                                                (() => {
                                                                                                                    const __callInstance107 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                s.deleteRule(V);
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance107.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __forInstance21.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __callInstance106 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc: () => {
                                                                                                            s.deleteRule(s.cssRules[0].keyText);
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __callInstance106.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                        }
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance105.exports;
                                                                            return __exports.data(browserPrefix === lS(0, 179) ? 1 : 0);
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __forInstance33.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        var V = 0, x = r.keyframes.length;
                                                        const __forInstance22 = new WebAssembly.Instance(__forWasmModule, {
                                                            env: {
                                                                test: () => {
                                                                    return V < x ? 1 : 0;
                                                                },
                                                                update: () => {
                                                                    V++;
                                                                },
                                                                body: () => {
                                                                    {
                                                                        var e = r.keyframes[V];
                                                                        (() => {
                                                                            const __ifInstance106 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            var R, X, a, c;
                                                                                            (() => {
                                                                                                const __ifInstance107 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                R = e.value.width;
                                                                                                                X = e.value.height;
                                                                                                                (() => {
                                                                                                                    const __ifInstance108 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc1: () => {
                                                                                                                                {
                                                                                                                                    (() => {
                                                                                                                                        const __callInstance105 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                impFunc: () => {
                                                                                                                                                    s.insertRule(lS(0, 181) + kTransformPropertyName + lS(0, 182) + kAnimationTimingFunctionPropertyName + lS(0, 183) + e.timingFunction + lS(0, 184));
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __callInstance105.exports;
                                                                                                                                        return __exports.data();
                                                                                                                                    })();
                                                                                                                                }
                                                                                                                            },
                                                                                                                            impFunc2: () => {
                                                                                                                                {
                                                                                                                                    (() => {
                                                                                                                                        const __callInstance104 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                impFunc: () => {
                                                                                                                                                    s.appendRule(lS(0, 185) + kTransformPropertyName + lS(0, 186) + kAnimationTimingFunctionPropertyName + lS(0, 187) + e.timingFunction + lS(0, 188));
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __callInstance104.exports;
                                                                                                                                        return __exports.data();
                                                                                                                                    })();
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __ifInstance108.exports;
                                                                                                                    return __exports.data(s.insertRule ? 1 : 0);
                                                                                                                })();
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                            {
                                                                                                                a = e.value.width;
                                                                                                                c = e.value.height;
                                                                                                                (() => {
                                                                                                                    const __ifInstance109 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc1: () => {
                                                                                                                                {
                                                                                                                                    (() => {
                                                                                                                                        const __callInstance103 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                impFunc: () => {
                                                                                                                                                    s.insertRule(e.keyframe + lS(0, 189) + kTransformPropertyName + lS(0, 190) + a / R + lS(0, 191) + c / X + lS(0, 192) + kAnimationTimingFunctionPropertyName + lS(0, 193) + e.timingFunction + lS(0, 194));
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __callInstance103.exports;
                                                                                                                                        return __exports.data();
                                                                                                                                    })();
                                                                                                                                }
                                                                                                                            },
                                                                                                                            impFunc2: () => {
                                                                                                                                {
                                                                                                                                    (() => {
                                                                                                                                        const __callInstance102 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                impFunc: () => {
                                                                                                                                                    s.appendRule(e.keyframe + lS(0, 195) + kTransformPropertyName + lS(0, 196) + a / R + lS(0, 197) + c / X + lS(0, 198) + kAnimationTimingFunctionPropertyName + lS(0, 199) + e.timingFunction + lS(0, 200));
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __callInstance102.exports;
                                                                                                                                        return __exports.data();
                                                                                                                                    })();
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __ifInstance109.exports;
                                                                                                                    return __exports.data(s.insertRule ? 1 : 0);
                                                                                                                })();
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance107.exports;
                                                                                                return __exports.data(e.keyframe == 0 ? 1 : 0);
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance106.exports;
                                                                            return __exports.data(E === lS(0, 180) ? 1 : 0);
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __forInstance22.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance104.exports;
                                    return __exports.data(s.name === A ? 1 : 0);
                                })();
                            }
                        }
                    }
                });
                const __exports = __forInstance20.exports;
                return __exports.data();
            })();
        }
        (() => {
            const __ifInstance110 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            var g = document.getElementById(v.id);
                            var F = window.getComputedStyle(g, null);
                            var K = F.getPropertyValue(kTransformPropertyName);
                            var L = parseTransformMatrix(K);
                            var l = lS(0, 201) + L[4] + lS(0, 202) + L[5] + lS(0, 203);
                            (() => {
                                const __callInstance101 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            setElementProperty(g, kTransformPropertyName, l);
                                        }
                                    }
                                });
                                const __exports = __callInstance101.exports;
                                return __exports.data();
                            })();
                            var u = document.getElementById(v.id + lS(0, 204) + escapeTextureId(lS(0, 205)));
                            (() => {
                                const __ifInstance111 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance100 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(u, kTransformPropertyName, lS(0, 206) + d.initialState.rotation + lS(0, 207));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance100.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance111.exports;
                                return __exports.data(u ? 1 : 0);
                            })();
                            var D = document.getElementById(v.id + lS(0, 208) + escapeTextureId(lS(0, 209)));
                            (() => {
                                const __ifInstance112 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance99 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(D, kTransformPropertyName, lS(0, 210) + d.initialState.scale + lS(0, 211));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance99.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance112.exports;
                                return __exports.data(D ? 1 : 0);
                            })();
                            var m = document.getElementById(v.id + lS(0, 212) + escapeTextureId(lS(0, 213)));
                            (() => {
                                const __ifInstance113 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance98 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                setElementProperty(m, kTransformPropertyName, lS(0, 214) + d.initialState.scale + lS(0, 215));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance98.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance113.exports;
                                return __exports.data(m ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance110.exports;
            return __exports.data(d.initialState.rotation !== 0 || d.initialState.scale !== 1 ? 1 : 0);
        })();
        for (var E in Q.keyAnimations) {
            var r = Q.keyAnimations[E];
            var z = r.keyActions;
            var H = z[z.length - 1];
            var G = r.keyframes[r.keyframes.length - 1];
            var ab = this.cssPropertyNameForAction(E);
            var U = this.cssPropertyValueForActionValue(E, G.value);
            var k = P + lS(0, 216);
            var A = lS(0, 217);
            var N = lS(0, 218);
            if (E === lS(0, 219)) {
                continue;
            }
            if (E === lS(0, 220)) {
                var h = document.getElementById(v.id + lS(0, 221) + escapeTextureId(E));
                (() => {
                    const __ifInstance114 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    (() => {
                                        const __callInstance97 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    setElementProperty(h, ab, U);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance97.exports;
                                        return __exports.data();
                                    })();
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance114.exports;
                    return __exports.data(h ? 1 : 0);
                })();
                continue;
            }
            switch (E) {
            case lS(0, 222):
                A = v.id + lS(0, 223);
                N = A;
                (() => {
                    const __ifInstance115 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    (() => {
                                        const __ifInstance116 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        A = v.id;
                                                    }
                                                },
                                                impFunc2: () => {
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance116.exports;
                                        return __exports.data(document.getElementById(A) == null ? 1 : 0);
                                    })();
                                    N = lS(0, 224) + d.layerId + lS(0, 225);
                                }
                            },
                            impFunc2: () => {
                                {
                                    (() => {
                                        const __callInstance96 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    setElementProperty(v, lS(0, 226), 1);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance96.exports;
                                        return __exports.data();
                                    })();
                                }
                            }
                        }
                    });
                    const __exports = __ifInstance115.exports;
                    return __exports.data(I ? 1 : 0);
                })();
                break;
            case lS(0, 227):
                ab = lS(0, 228);
                (() => {
                    const __ifInstance117 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    U = 0;
                                }
                            },
                            impFunc2: () => {
                                {
                                    v.style.visibility = lS(0, 230);
                                    U = 1;
                                }
                            }
                        }
                    });
                    const __exports = __ifInstance117.exports;
                    return __exports.data(U === lS(0, 229) ? 1 : 0);
                })();
                A = v.id;
                N = A + lS(0, 231);
                (() => {
                    const __ifInstance118 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    N = lS(0, 232) + d.layerId + lS(0, 233);
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance118.exports;
                    return __exports.data(I ? 1 : 0);
                })();
                break;
            case lS(0, 234):
                A = v.id + lS(0, 235);
                N = A;
                (() => {
                    const __ifInstance119 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    N = lS(0, 236) + d.layerId + lS(0, 237);
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance119.exports;
                    return __exports.data(I ? 1 : 0);
                })();
                var R, X, t, J;
                var n = r.keyframes[0];
                var S = r.keyframes[r.keyframes.length - 1];
                U = lS(0, 238) + S.value.width / n.value.width + lS(0, 239) + S.value.height / n.value.height + lS(0, 240);
                break;
            default:
                A = v.id + lS(0, 241) + escapeTextureId(E);
                N = A;
                (() => {
                    const __ifInstance120 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    N = lS(0, 242) + d.layerId + lS(0, 243) + escapeTextureId(E);
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance120.exports;
                    return __exports.data(I ? 1 : 0);
                })();
                break;
            }
            if (E === lS(0, 244)) {
                var T = v.id + lS(0, 245);
                var Y = v.id + lS(0, 246);
                var M = T;
                var q = Y;
                (() => {
                    const __ifInstance121 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    M = lS(0, 247) + d.layerId + lS(0, 248);
                                    q = lS(0, 249) + d.layerId + lS(0, 250);
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance121.exports;
                    return __exports.data(I ? 1 : 0);
                })();
                var p = document.getElementById(T);
                var Z = document.getElementById(Y);
                (() => {
                    const __callInstance95 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                setElementProperty(p, lS(0, 251), 0);
                            }
                        }
                    });
                    const __exports = __callInstance95.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance94 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                setElementProperty(p, kAnimationNamePropertyName, M);
                            }
                        }
                    });
                    const __exports = __callInstance94.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance93 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                setElementProperty(p, kAnimationDurationPropertyName, k);
                            }
                        }
                    });
                    const __exports = __callInstance93.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance92 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                setElementProperty(Z, lS(0, 252), 1);
                            }
                        }
                    });
                    const __exports = __callInstance92.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance91 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                setElementProperty(Z, kAnimationNamePropertyName, q);
                            }
                        }
                    });
                    const __exports = __callInstance91.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance90 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                setElementProperty(Z, kAnimationDurationPropertyName, k);
                            }
                        }
                    });
                    const __exports = __callInstance90.exports;
                    return __exports.data();
                })();
                continue;
            }
            var b = document.getElementById(A);
            (() => {
                const __ifInstance122 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __ifInstance123 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    var o = {};
                                                    o.x = H.to.pointX;
                                                    o.y = H.to.pointY;
                                                    var O = {};
                                                    var f = {};
                                                    var C = {};
                                                    f.x = d.bounds.width / 2;
                                                    f.y = d.bounds.height / 2;
                                                    (() => {
                                                        const __ifInstance124 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        C.x = o.x * d.bounds.width;
                                                                        C.y = o.y * d.bounds.height;
                                                                        O.x = f.x - C.x;
                                                                        O.y = f.y - C.y;
                                                                        (() => {
                                                                            const __ifInstance125 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            O.x = d.magicMoveOffsetValue.pointX;
                                                                                            O.y = d.magicMoveOffsetValue.pointY;
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance125.exports;
                                                                            return __exports.data(d.magicMoveOffsetValue ? 1 : 0);
                                                                        })();
                                                                        ab = kTransformPropertyName;
                                                                        U = lS(0, 254) + O.x + lS(0, 255) + O.y + lS(0, 256);
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance124.exports;
                                                        return __exports.data(o.x != null && o.y != null ? 1 : 0);
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    (() => {
                                                        const __ifInstance126 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance127 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            ab = kTransformPropertyName;
                                                                                            U = lS(0, 259) + -d.transformOriginZValue + lS(0, 260);
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                        {
                                                                                            ab = kTransformPropertyName;
                                                                                            U = lS(0, 261) + d.transformOriginZValue + lS(0, 262);
                                                                                        }
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance127.exports;
                                                                            return __exports.data(Prototype.Browser.Gecko || navigator.userAgent.lastIndexOf(lS(0, 258)) > 0 ? 1 : 0);
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance126.exports;
                                                        return __exports.data(E === lS(0, 257) ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance123.exports;
                                    return __exports.data(E === lS(0, 253) ? 1 : 0);
                                })();
                                (() => {
                                    const __ifInstance128 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    (() => {
                                                        const __callInstance89 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    setElementProperty(b, kAnimationFillModePropertyName, H.fillMode === lS(0, 264) ? lS(0, 265) : H.fillMode);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance89.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    (() => {
                                                        const __callInstance88 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    setElementProperty(b, ab, U);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance88.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __ifInstance129 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance87 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        setElementProperty(b, kAnimationFillModePropertyName, H.fillMode === lS(0, 266) ? lS(0, 267) : H.fillMode);
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance87.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance129.exports;
                                                        return __exports.data(I ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance128.exports;
                                    return __exports.data(E === lS(0, 263) ? 1 : 0);
                                })();
                                (() => {
                                    const __callInstance86 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                setElementProperty(b, kAnimationNamePropertyName, N);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance86.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance85 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                setElementProperty(b, kAnimationDurationPropertyName, k);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance85.exports;
                                    return __exports.data();
                                })();
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance122.exports;
                return __exports.data(b ? 1 : 0);
            })();
        }
    },
    cssPropertyValueForActionValue: function (a, b) {
        switch (a) {
        case lS(0, 268):
            if (b.scalar === true) {
                return lS(0, 269);
            } else {
                return lS(0, 270);
            }
        case lS(0, 271):
            return b.pointX + lS(0, 272) + b.pointY + lS(0, 273);
        case lS(0, 274):
            return b.scalar;
        case lS(0, 275):
            return lS(0, 276) + b.pointX + lS(0, 277) + b.pointY + lS(0, 278);
        case lS(0, 279):
            return lS(0, 280) + b.scalar + lS(0, 281);
        case lS(0, 282):
            return lS(0, 283) + b.translationEmphasis[0] + lS(0, 284) + b.translationEmphasis[1] + lS(0, 285) + b.translationEmphasis[2] + lS(0, 286);
        case lS(0, 287):
            return lS(0, 288) + b.rotationEmphasis[6] + lS(0, 289);
        case lS(0, 290):
            return lS(0, 291) + ensureScaleFactorNotZero(b.scaleEmphasis[3]) + lS(0, 292) + ensureScaleFactorNotZero(b.scaleEmphasis[4]) + lS(0, 293) + ensureScaleFactorNotZero(b.scaleEmphasis[5]) + lS(0, 294);
        case lS(0, 295):
        case lS(0, 296):
            return lS(0, 297) + ensureScaleFactorNotZero(b.scalar) + lS(0, 298);
        case lS(0, 299):
            return lS(0, 300) + ensureScaleFactorNotZero(b.scalar) + lS(0, 301);
        case lS(0, 302):
            return lS(0, 303) + ensureScaleFactorNotZero(b.scalar) + lS(0, 304);
        case lS(0, 305):
            return lS(0, 306) + b.scalar + lS(0, 307);
        case lS(0, 308):
            return lS(0, 309) + b.scalar + lS(0, 310);
        case lS(0, 311):
        case lS(0, 312):
            return lS(0, 313) + b.scalar + lS(0, 314);
        case lS(0, 315):
            return lS(0, 316) + b.pointX + lS(0, 317) + b.pointY + lS(0, 318);
        case lS(0, 319):
            return lS(0, 320) + b.scalar + lS(0, 321);
        case lS(0, 322):
            return lS(0, 323) + b.scalar + lS(0, 324);
        case lS(0, 325):
            return lS(0, 326) + b.scalar + lS(0, 327);
        case lS(0, 328):
        case lS(0, 329):
        case lS(0, 330):
            return b.scalar + lS(0, 331);
        case lS(0, 332):
            return lS(0, 333) + b.transform + lS(0, 334);
        case lS(0, 335):
            if (b.scalar === false) {
                return lS(0, 336);
            } else {
                return lS(0, 337);
            }
        default:
            return lS(0, 338);
        }
    },
    cssPropertyNameForAction: function (a) {
        switch (a) {
        case lS(0, 339):
            return kVisibilityPropertyName;
        case lS(0, 340):
            return kTransformOriginPropertyName;
        case lS(0, 341):
            return kTransformOriginZPropertyName;
        case lS(0, 342):
            return kOpacityPropertyName;
        case lS(0, 343):
        case lS(0, 344):
        case lS(0, 345):
        case lS(0, 346):
        case lS(0, 347):
        case lS(0, 348):
        case lS(0, 349):
        case lS(0, 350):
        case lS(0, 351):
        case lS(0, 352):
        case lS(0, 353):
        case lS(0, 354):
        case lS(0, 355):
        case lS(0, 356):
        case lS(0, 357):
        case lS(0, 358):
        case lS(0, 359):
        case lS(0, 360):
        case lS(0, 361):
            return kTransformPropertyName;
        case lS(0, 362):
            return kBackfaceVisibilityPropertyName;
        case lS(0, 363):
            return kBackgroundImagePropertyName;
        default:
            return a;
        }
    },
    hideMoviePoster: function (a) {
        a.style.visibility = lS(0, 364);
    },
    handleMovieDidStart: function (a, b) {
        b.style.visibility = lS(0, 365);
        (() => {
            const __callInstance84 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        setTimeout(this.hideMoviePoster.bind(this, a), 120);
                    }
                }
            });
            const __exports = __callInstance84.exports;
            return __exports.data();
        })();
    },
    handleMovieDidEnd: function (a, b) {
        (() => {
            const __ifInstance130 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            b.isEnded = true;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance130.exports;
            return __exports.data(!b.loop ? 1 : 0);
        })();
    },
    startMovie: function (a) {
        (() => {
            const __ifInstance131 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance83 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            a.play();
                                        }
                                    }
                                });
                                const __exports = __callInstance83.exports;
                                return __exports.data();
                            })();
                            a.isPlaying = true;
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance131.exports;
            return __exports.data(a ? 1 : 0);
        })();
    },
    stopMovie: function (a) {
        (() => {
            const __ifInstance132 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance82 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            a.pause();
                                        }
                                    }
                                });
                                const __exports = __callInstance82.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance132.exports;
            return __exports.data(a ? 1 : 0);
        })();
    }
});
var KPFLayer = Class.create({
    initialize: function (c, d, b) {
        this.animationInfo = d;
        this.layerId = kpfLayerCounter;
        kpfLayerCounter = kpfLayerCounter + 1;
        this.objectID = c.objectID != null ? c.objectID : null;
        this.textureId = c.texture ? c.texture : null;
        this.animations = c.animations;
        this.initialState = c.initialState;
        this.cssAnimationRules = [];
        this.layers = [];
        this.affineTransform = this.initialState.affineTransform;
        this.position = this.initialState.position;
        this.textureTransform = lS(0, 366);
        (() => {
            const __ifInstance133 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.textureTransform = lS(0, 367) + this.initialState.transform + lS(0, 368);
                        }
                    },
                    impFunc2: () => {
                        {
                            this.textureTransform = lS(0, 369) + this.affineTransform + lS(0, 370);
                        }
                    }
                }
            });
            const __exports = __ifInstance133.exports;
            return __exports.data(this.initialState.transform != null && this.initialState.transform != undefined ? 1 : 0);
        })();
        this.anchorPoint = this.initialState.anchorPoint;
        (() => {
            const __ifInstance134 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            b = {
                                pointX: 0,
                                pointY: 0
                            };
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance134.exports;
            return __exports.data(b == null ? 1 : 0);
        })();
        var a = this.position.pointX - this.initialState.width / 2 - (this.anchorPoint.pointX - 0.5) * this.initialState.width;
        var e = this.position.pointY - this.initialState.height / 2 - (this.anchorPoint.pointY - 0.5) * this.initialState.height;
        a = Math.round(a * 1000000) / 1000000;
        e = Math.round(e * 1000000) / 1000000;
        this.bounds = {
            width: this.initialState.width,
            height: this.initialState.height,
            origin: {
                pointX: this.affineTransform[4],
                pointY: this.affineTransform[5]
            },
            offset: {
                pointX: a,
                pointY: e
            },
            canvasOffset: {
                pointX: a + b.pointX,
                pointY: e + b.pointY
            }
        };
        this.sublayerTransform = this.initialState.sublayerTransform;
        this.contentsRect = this.initialState.contentsRect;
        this.hidden = this.initialState.hidden;
        this.opacity = this.initialState.opacity;
        this.visibility = this.hidden === true ? lS(0, 371) : lS(0, 372);
        (() => {
            const __callInstance81 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.addSublayer(c.layers, d, this.bounds.offset);
                    }
                }
            });
            const __exports = __callInstance81.exports;
            return __exports.data();
        })();
        (() => {
            const __ifInstance135 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance80 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.initLayerAnimations();
                                        }
                                    }
                                });
                                const __exports = __callInstance80.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance135.exports;
            return __exports.data(d.animationSupported ? 1 : 0);
        })();
    },
    destroy: function () {
        this.initialState = null;
        this.cssAnimationRules = null;
        this.affineTransform = null;
        this.textureTransform = null;
        this.anchorPoint = null;
        this.anchorPointZ = null;
        this.bounds = null;
        this.contentsRect = null;
        this.hidden = null;
        this.opacity = null;
    },
    addSublayer: function (f, e, d) {
        (() => {
            var a = 0, b = f.length;
            const __forInstance23 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return a < b ? 1 : 0;
                    },
                    update: () => {
                        a++;
                    },
                    body: () => {
                        {
                            var c = new KPFLayer(f[a], e, d);
                            (() => {
                                const __callInstance79 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.layers.push(c);
                                        }
                                    }
                                });
                                const __exports = __callInstance79.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance23.exports;
            return __exports.data();
        })();
    },
    initLayerAnimations: function () {
        var k = false;
        var h = false;
        var b = false;
        var q = false;
        var g = false;
        var f = false;
        var d = false;
        var a = false;
        var n = false;
        var m = false;
        var l = false;
        var s = false;
        var v = false;
        var u = false;
        var c = false;
        var w = false;
        var o = false;
        var r = [];
        var e = false;
        (() => {
            const __ifInstance136 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.isActionBuild = true;
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                const __ifInstance137 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                this.isBuildIn = true;
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                (() => {
                                                    const __ifInstance138 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    this.isBuildOut = true;
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                                {
                                                                    (() => {
                                                                        const __ifInstance139 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        this.isTransition = true;
                                                                                        (() => {
                                                                                            const __ifInstance140 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                env: {
                                                                                                    impFunc1: () => {
                                                                                                        {
                                                                                                            this.isMagicMove = true;
                                                                                                        }
                                                                                                    },
                                                                                                    impFunc2: () => {
                                                                                                        {
                                                                                                            (() => {
                                                                                                                const __ifInstance141 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                    env: {
                                                                                                                        impFunc1: () => {
                                                                                                                            {
                                                                                                                                e = true;
                                                                                                                            }
                                                                                                                        },
                                                                                                                        impFunc2: () => {
                                                                                                                        }
                                                                                                                    }
                                                                                                                });
                                                                                                                const __exports = __ifInstance141.exports;
                                                                                                                return __exports.data(this.animationInfo.name === lS(0, 378) ? 1 : 0);
                                                                                                            })();
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __ifInstance140.exports;
                                                                                            return __exports.data(this.animationInfo.name === lS(0, 377) ? 1 : 0);
                                                                                        })();
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance139.exports;
                                                                        return __exports.data(this.animationInfo.type === lS(0, 376) ? 1 : 0);
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance138.exports;
                                                    return __exports.data(this.animationInfo.type === lS(0, 375) ? 1 : 0);
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance137.exports;
                                return __exports.data(this.animationInfo.type === lS(0, 374) ? 1 : 0);
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance136.exports;
            return __exports.data(this.animationInfo.type === lS(0, 373) ? 1 : 0);
        })();
        (() => {
            const __ifInstance142 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.cssAnimation = new KPFCssAnimation(this.animations, this);
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance142.exports;
            return __exports.data(this.animations.length > 0 ? 1 : 0);
        })();
        (() => {
            const __ifInstance143 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            this.divNames = [];
                            var p = {
                                isPlaying: 0,
                                opacityMultiplier: 1,
                                hidden: 2
                            };
                            for (var x in this.cssAnimation.keyAnimations) {
                                (() => {
                                    const __ifInstance144 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    (() => {
                                                        const __ifInstance145 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        h = true;
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance146 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            b = true;
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __ifInstance147 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                q = true;
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                            {
                                                                                                                (() => {
                                                                                                                    const __ifInstance148 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc1: () => {
                                                                                                                                {
                                                                                                                                    g = true;
                                                                                                                                }
                                                                                                                            },
                                                                                                                            impFunc2: () => {
                                                                                                                                {
                                                                                                                                    (() => {
                                                                                                                                        const __ifInstance149 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                impFunc1: () => {
                                                                                                                                                    {
                                                                                                                                                        f = true;
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                impFunc2: () => {
                                                                                                                                                    {
                                                                                                                                                        (() => {
                                                                                                                                                            const __ifInstance150 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                env: {
                                                                                                                                                                    impFunc1: () => {
                                                                                                                                                                        {
                                                                                                                                                                            d = true;
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    impFunc2: () => {
                                                                                                                                                                        {
                                                                                                                                                                            (() => {
                                                                                                                                                                                const __ifInstance151 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                    env: {
                                                                                                                                                                                        impFunc1: () => {
                                                                                                                                                                                            {
                                                                                                                                                                                                a = true;
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        impFunc2: () => {
                                                                                                                                                                                            {
                                                                                                                                                                                                (() => {
                                                                                                                                                                                                    const __ifInstance152 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                        env: {
                                                                                                                                                                                                            impFunc1: () => {
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    n = true;
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            impFunc2: () => {
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    (() => {
                                                                                                                                                                                                                        const __ifInstance153 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                            env: {
                                                                                                                                                                                                                                impFunc1: () => {
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                        m = true;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                impFunc2: () => {
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                        (() => {
                                                                                                                                                                                                                                            const __ifInstance154 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                env: {
                                                                                                                                                                                                                                                    impFunc1: () => {
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            l = true;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                    impFunc2: () => {
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            (() => {
                                                                                                                                                                                                                                                                const __ifInstance155 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                    env: {
                                                                                                                                                                                                                                                                        impFunc1: () => {
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                s = true;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                        impFunc2: () => {
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                (() => {
                                                                                                                                                                                                                                                                                    const __ifInstance156 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                        env: {
                                                                                                                                                                                                                                                                                            impFunc1: () => {
                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                    v = true;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                            impFunc2: () => {
                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                    (() => {
                                                                                                                                                                                                                                                                                                        const __ifInstance157 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                            env: {
                                                                                                                                                                                                                                                                                                                impFunc1: () => {
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                        u = true;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                impFunc2: () => {
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                        (() => {
                                                                                                                                                                                                                                                                                                                            const __ifInstance158 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                                                env: {
                                                                                                                                                                                                                                                                                                                                    impFunc1: () => {
                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                            c = true;
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                    impFunc2: () => {
                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                            (() => {
                                                                                                                                                                                                                                                                                                                                                const __ifInstance159 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                                                                    env: {
                                                                                                                                                                                                                                                                                                                                                        impFunc1: () => {
                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                w = true;
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                        impFunc2: () => {
                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                (() => {
                                                                                                                                                                                                                                                                                                                                                                    const __ifInstance160 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                                                                                        env: {
                                                                                                                                                                                                                                                                                                                                                                            impFunc1: () => {
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                    o = true;
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                            impFunc2: () => {
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                    (() => {
                                                                                                                                                                                                                                                                                                                                                                                        const __ifInstance161 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                                                                                                            env: {
                                                                                                                                                                                                                                                                                                                                                                                                impFunc1: () => {
                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                        k = true;
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                impFunc2: () => {
                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                        (() => {
                                                                                                                                                                                                                                                                                                                                                                                                            const __ifInstance162 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                                                                                                                                env: {
                                                                                                                                                                                                                                                                                                                                                                                                                    impFunc1: () => {
                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                            this.hasContentsAnimation = true;
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                                    impFunc2: () => {
                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                            (() => {
                                                                                                                                                                                                                                                                                                                                                                                                                                const __ifInstance163 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                                                                                                                                                    env: {
                                                                                                                                                                                                                                                                                                                                                                                                                                        impFunc1: () => {
                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                this.hasBoundsAnimation = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                                                        impFunc2: () => {
                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                (() => {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    const __ifInstance164 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        env: {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            impFunc1: () => {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    this.hasPosition = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                                                                            impFunc2: () => {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (() => {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        const __callInstance78 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            env: {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                impFunc: () => {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    r.push(x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        });
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        const __exports = __callInstance78.exports;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        return __exports.data();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    })();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    });
                                                                                                                                                                                                                                                                                                                                                                                                                                                    const __exports = __ifInstance164.exports;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    return __exports.data(x === lS(0, 398) ? 1 : 0);
                                                                                                                                                                                                                                                                                                                                                                                                                                                })();
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                });
                                                                                                                                                                                                                                                                                                                                                                                                                                const __exports = __ifInstance163.exports;
                                                                                                                                                                                                                                                                                                                                                                                                                                return __exports.data(x === lS(0, 397) ? 1 : 0);
                                                                                                                                                                                                                                                                                                                                                                                                                            })();
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                                                                                                                                                                                            const __exports = __ifInstance162.exports;
                                                                                                                                                                                                                                                                                                                                                                                                            return __exports.data(x === lS(0, 396) ? 1 : 0);
                                                                                                                                                                                                                                                                                                                                                                                                        })();
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                        });
                                                                                                                                                                                                                                                                                                                                                                                        const __exports = __ifInstance161.exports;
                                                                                                                                                                                                                                                                                                                                                                                        return __exports.data(x === lS(0, 395) ? 1 : 0);
                                                                                                                                                                                                                                                                                                                                                                                    })();
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                    });
                                                                                                                                                                                                                                                                                                                                                                    const __exports = __ifInstance160.exports;
                                                                                                                                                                                                                                                                                                                                                                    return __exports.data(x === lS(0, 394) ? 1 : 0);
                                                                                                                                                                                                                                                                                                                                                                })();
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                });
                                                                                                                                                                                                                                                                                                                                                const __exports = __ifInstance159.exports;
                                                                                                                                                                                                                                                                                                                                                return __exports.data(x === lS(0, 393) ? 1 : 0);
                                                                                                                                                                                                                                                                                                                                            })();
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                                                                                                            const __exports = __ifInstance158.exports;
                                                                                                                                                                                                                                                                                                                            return __exports.data(x === lS(0, 392) ? 1 : 0);
                                                                                                                                                                                                                                                                                                                        })();
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        });
                                                                                                                                                                                                                                                                                                        const __exports = __ifInstance157.exports;
                                                                                                                                                                                                                                                                                                        return __exports.data(x === lS(0, 391) ? 1 : 0);
                                                                                                                                                                                                                                                                                                    })();
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    });
                                                                                                                                                                                                                                                                                    const __exports = __ifInstance156.exports;
                                                                                                                                                                                                                                                                                    return __exports.data(x === lS(0, 390) ? 1 : 0);
                                                                                                                                                                                                                                                                                })();
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                });
                                                                                                                                                                                                                                                                const __exports = __ifInstance155.exports;
                                                                                                                                                                                                                                                                return __exports.data(!e && x === lS(0, 389) ? 1 : 0);
                                                                                                                                                                                                                                                            })();
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            const __exports = __ifInstance154.exports;
                                                                                                                                                                                                                                            return __exports.data(!e && x === lS(0, 388) ? 1 : 0);
                                                                                                                                                                                                                                        })();
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        });
                                                                                                                                                                                                                        const __exports = __ifInstance153.exports;
                                                                                                                                                                                                                        return __exports.data(!e && x === lS(0, 387) ? 1 : 0);
                                                                                                                                                                                                                    })();
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    });
                                                                                                                                                                                                    const __exports = __ifInstance152.exports;
                                                                                                                                                                                                    return __exports.data(!e && x === lS(0, 386) ? 1 : 0);
                                                                                                                                                                                                })();
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                });
                                                                                                                                                                                const __exports = __ifInstance151.exports;
                                                                                                                                                                                return __exports.data(!e && x === lS(0, 385) ? 1 : 0);
                                                                                                                                                                            })();
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            });
                                                                                                                                                            const __exports = __ifInstance150.exports;
                                                                                                                                                            return __exports.data(!e && x === lS(0, 384) ? 1 : 0);
                                                                                                                                                        })();
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __ifInstance149.exports;
                                                                                                                                        return __exports.data(!e && x === lS(0, 383) ? 1 : 0);
                                                                                                                                    })();
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __ifInstance148.exports;
                                                                                                                    return __exports.data(!e && x === lS(0, 382) ? 1 : 0);
                                                                                                                })();
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance147.exports;
                                                                                                return __exports.data(x === lS(0, 381) ? 1 : 0);
                                                                                            })();
                                                                                        }
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance146.exports;
                                                                            return __exports.data(x === lS(0, 380) ? 1 : 0);
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance145.exports;
                                                        return __exports.data(x == lS(0, 379) ? 1 : 0);
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance144.exports;
                                    return __exports.data(!p.hasOwnProperty(x) ? 1 : 0);
                                })();
                            }
                            (() => {
                                const __ifInstance165 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance77 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 399));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance77.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance165.exports;
                                return __exports.data(h || this.isActionBuild ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance166 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance76 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 400));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance76.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance166.exports;
                                return __exports.data(o ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance167 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance75 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 401));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance75.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance167.exports;
                                return __exports.data(this.hasPosition || this.isActionBuild ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance168 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance74 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 402));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance74.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance168.exports;
                                return __exports.data(b ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance169 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance73 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 403));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance73.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance169.exports;
                                return __exports.data(q ? 1 : 0);
                            })();
                            (() => {
                                var t = 0, j = r.length;
                                const __forInstance24 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return t < j ? 1 : 0;
                                        },
                                        update: () => {
                                            t++;
                                        },
                                        body: () => {
                                            {
                                                (() => {
                                                    const __callInstance72 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(r[t]);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance72.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance24.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __ifInstance170 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance71 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 404));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance71.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance170.exports;
                                return __exports.data(g ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance171 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance70 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 405));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance70.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance171.exports;
                                return __exports.data(f ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance172 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance69 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 406));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance69.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance172.exports;
                                return __exports.data(a ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance173 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance68 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 407));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance68.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance173.exports;
                                return __exports.data(d ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance174 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance67 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 408));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance67.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance174.exports;
                                return __exports.data(n ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance175 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance66 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 409));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance66.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance175.exports;
                                return __exports.data(m ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance176 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance65 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 410));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance65.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance176.exports;
                                return __exports.data(l ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance177 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance64 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 412));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance64.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance177.exports;
                                return __exports.data((this.initialState.rotation !== 0 || this.isActionBuild) && this.divNames.indexOf(lS(0, 411)) === -1 ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance178 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance63 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 413));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance63.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance178.exports;
                                return __exports.data(s ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance179 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance62 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 414));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance62.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance179.exports;
                                return __exports.data(v ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance180 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance61 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 415));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance61.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance180.exports;
                                return __exports.data(u ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance181 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __ifInstance182 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance60 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    this.divNames.push(lS(0, 417));
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance60.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance182.exports;
                                                    return __exports.data(this.divNames.indexOf(lS(0, 416)) === -1 ? 1 : 0);
                                                })();
                                                (() => {
                                                    const __ifInstance183 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance59 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    this.divNames.push(lS(0, 419));
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance59.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance183.exports;
                                                    return __exports.data(this.divNames.indexOf(lS(0, 418)) === -1 ? 1 : 0);
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance181.exports;
                                return __exports.data(this.initialState.scale !== 1 || this.isActionBuild ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance184 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance58 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 420));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance58.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance184.exports;
                                return __exports.data(c ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance185 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance57 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 421));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance57.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance185.exports;
                                return __exports.data(w ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance186 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance56 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 422));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance56.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance186.exports;
                                return __exports.data(this.hasBoundsAnimation ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance187 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance55 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.divNames.push(lS(0, 423));
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance55.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance187.exports;
                                return __exports.data(k ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance143.exports;
            return __exports.data(this.cssAnimation ? 1 : 0);
        })();
    }
});
var KPFCssAnimation = Class.create({
    initialize: function (n, F) {
        this.kDelta = 0.0001;
        this.kRoundingFactor = 10000;
        this.animations = [];
        this.keyAnimations = {};
        for (var A = 0, g = n.length; A < g; A++) {
            var C = n[A];
            var t = C.beginTime;
            var b = C.duration;
            var c = C.timingFunction ? C.timingFunction : lS(0, 424);
            var E;
            var D;
            var h;
            var f;
            var w;
            var u = t + b;
            this.overallEndTime = 0;
            (() => {
                const __ifInstance188 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                this.overallEndTime = u;
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance188.exports;
                return __exports.data(u > this.overallEndTime ? 1 : 0);
            })();
            (() => {
                const __ifInstance189 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                E = C.timingControlPoint1x;
                                D = C.timingControlPoint1y;
                                h = C.timingControlPoint2x;
                                f = C.timingControlPoint2y;
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance189.exports;
                return __exports.data(c == lS(0, 425) ? 1 : 0);
            })();
            if (C.animations != null && C.animations.length > 0) {
                var p = C.animations;
                var o = t;
                (() => {
                    const __ifInstance190 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    o = p[0].beginTime;
                                    p = p[0].animations;
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance190.exports;
                    return __exports.data(p[0].property == null ? 1 : 0);
                })();
                for (var x = 0, d = p.length; x < d; x++) {
                    var a = p[x];
                    var m = a.property;
                    var z = this.keyAnimations[m];
                    (() => {
                        const __ifInstance191 = new WebAssembly.Instance(__ifWasmModule, {
                            env: {
                                impFunc1: () => {
                                    {
                                        z = {
                                            groupBeginTime: o,
                                            earliestBeginTime: o + a.beginTime,
                                            latestEndTime: -1,
                                            keyActions: []
                                        };
                                        this.keyAnimations[m] = z;
                                    }
                                },
                                impFunc2: () => {
                                }
                            }
                        });
                        const __exports = __ifInstance191.exports;
                        return __exports.data(z == null ? 1 : 0);
                    })();
                    (() => {
                        const __ifInstance192 = new WebAssembly.Instance(__ifWasmModule, {
                            env: {
                                impFunc1: () => {
                                    {
                                        z.latestEndTime = o + a.beginTime + a.duration;
                                    }
                                },
                                impFunc2: () => {
                                }
                            }
                        });
                        const __exports = __ifInstance192.exports;
                        return __exports.data(o + a.beginTime + a.duration > z.latestEndTime ? 1 : 0);
                    })();
                    if (a.path) {
                        var B = C.path.length;
                        for (var v = 0; A < B; v++) {
                            var q = C.path[v];
                            var y = q.points[0];
                            var G, e;
                            (() => {
                                const __ifInstance193 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                e = {
                                                    pointX: y[0],
                                                    pointY: y[1]
                                                };
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                G = C.path[v - 1].points[0];
                                                e = {
                                                    pointX: G[0],
                                                    pointY: G[1]
                                                };
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance193.exports;
                                return __exports.data(v === 0 ? 1 : 0);
                            })();
                            switch (q.type) {
                            case lS(0, 426):
                            case lS(0, 427):
                            case lS(0, 428):
                            case lS(1, 0):
                                w = {
                                    property: 'position',
                                    from: e,
                                    to: {
                                        pointX: y[0],
                                        pointY: y[1]
                                    },
                                    fillMode: 'forwards',
                                    beginTime: o + a.beginTime + v / B * a.duration,
                                    duration: 1 / B * a.duration,
                                    timingFunction: 'linear',
                                    groupTimingFunction: c,
                                    groupBeginTime: t,
                                    groupDuration: b,
                                    groupTimingControlPoint1x: E,
                                    groupTimingControlPoint1y: D,
                                    groupTimingControlPoint2x: h,
                                    groupTimingControlPoint2y: f
                                };
                                break;
                            }
                            (() => {
                                const __callInstance54 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.addAction(w, a);
                                        }
                                    }
                                });
                                const __exports = __callInstance54.exports;
                                return __exports.data();
                            })();
                        }
                    } else {
                        (() => {
                            const __ifInstance194 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var s = a.keyTimes.length;
                                            (() => {
                                                var v = 0;
                                                const __forInstance25 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return v < s - 1 ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            v++;
                                                        },
                                                        body: () => {
                                                            {
                                                                var r = a.keyTimes[v];
                                                                var l = a.keyTimes[v + 1];
                                                                w = {
                                                                    property: a.property,
                                                                    from: a.values[v],
                                                                    to: a.values[v + 1],
                                                                    fillMode: a.fillMode,
                                                                    beginTime: o + a.beginTime + r / 1 * a.duration,
                                                                    duration: (l - r) * a.duration,
                                                                    timingFunction: a.timingFunctions ? a.timingFunctions[v] : lS(1, 1),
                                                                    groupTimingFunction: c,
                                                                    groupBeginTime: t,
                                                                    groupDuration: b,
                                                                    groupTimingControlPoint1x: E,
                                                                    groupTimingControlPoint1y: D,
                                                                    groupTimingControlPoint2x: h,
                                                                    groupTimingControlPoint2y: f
                                                                };
                                                                (() => {
                                                                    const __callInstance53 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.addAction(w, a);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance53.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance25.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            w = {
                                                property: a.property,
                                                from: a.from,
                                                to: a.to,
                                                fillMode: a.fillMode,
                                                beginTime: o + a.beginTime,
                                                duration: a.duration,
                                                timingFunction: a.timingFunction ? a.timingFunction : lS(1, 2),
                                                groupTimingFunction: c,
                                                groupBeginTime: t,
                                                groupDuration: b,
                                                groupTimingControlPoint1x: E,
                                                groupTimingControlPoint1y: D,
                                                groupTimingControlPoint2x: h,
                                                groupTimingControlPoint2y: f
                                            };
                                            (() => {
                                                const __callInstance52 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.addAction(w, a);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance52.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance194.exports;
                            return __exports.data(a.keyTimes ? 1 : 0);
                        })();
                    }
                }
            } else {
                var m = C.property;
                var z = this.keyAnimations[m];
                (() => {
                    const __ifInstance195 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    z = {
                                        groupBeginTime: 0,
                                        earliestBeginTime: C.beginTime,
                                        latestEndTime: -1,
                                        keyActions: []
                                    };
                                    this.keyAnimations[m] = z;
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance195.exports;
                    return __exports.data(z == null ? 1 : 0);
                })();
                (() => {
                    const __ifInstance196 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    z.latestEndTime = C.beginTime + C.duration;
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance196.exports;
                    return __exports.data(C.beginTime + C.duration > z.latestEndTime ? 1 : 0);
                })();
                if (C.path) {
                    var B = C.path.length;
                    for (var v = 0; v < B; v++) {
                        var q = C.path[v];
                        var y = q.points[0];
                        var G, e;
                        (() => {
                            const __ifInstance197 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            e = {
                                                pointX: y[0],
                                                pointY: y[1]
                                            };
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            G = C.path[v - 1].points[0];
                                            e = {
                                                pointX: G[0],
                                                pointY: G[1]
                                            };
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance197.exports;
                            return __exports.data(v === 0 ? 1 : 0);
                        })();
                        switch (q.type) {
                        case lS(1, 3):
                        case lS(1, 4):
                        case lS(1, 5):
                        case lS(1, 6):
                            w = {
                                property: 'position',
                                from: e,
                                to: {
                                    pointX: y[0],
                                    pointY: y[1]
                                },
                                fillMode: 'forwards',
                                beginTime: t + v / B * b,
                                duration: 1 / B * b,
                                timingFunction: 'linear'
                            };
                            break;
                        }
                        (() => {
                            const __callInstance51 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.addAction(w, C);
                                    }
                                }
                            });
                            const __exports = __callInstance51.exports;
                            return __exports.data();
                        })();
                    }
                } else {
                    (() => {
                        const __ifInstance198 = new WebAssembly.Instance(__ifWasmModule, {
                            env: {
                                impFunc1: () => {
                                    {
                                        var s = C.keyTimes.length;
                                        (() => {
                                            var v = 0;
                                            const __forInstance26 = new WebAssembly.Instance(__forWasmModule, {
                                                env: {
                                                    test: () => {
                                                        return v < s - 1 ? 1 : 0;
                                                    },
                                                    update: () => {
                                                        v++;
                                                    },
                                                    body: () => {
                                                        {
                                                            var r = C.keyTimes[v];
                                                            var l = C.keyTimes[v + 1];
                                                            w = {
                                                                property: C.property,
                                                                from: C.values[v],
                                                                to: C.values[v + 1],
                                                                fillMode: C.fillMode,
                                                                beginTime: r / 1 * b,
                                                                duration: (l - r) * b,
                                                                timingFunction: C.timingFunctions ? C.timingFunctions[v] : lS(1, 7)
                                                            };
                                                            (() => {
                                                                const __callInstance50 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.addAction(w, C);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance50.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                }
                                            });
                                            const __exports = __forInstance26.exports;
                                            return __exports.data();
                                        })();
                                    }
                                },
                                impFunc2: () => {
                                    {
                                        w = {
                                            property: C.property,
                                            from: C.from,
                                            to: C.to,
                                            fillMode: C.fillMode,
                                            beginTime: t,
                                            duration: b,
                                            timingFunction: c ? c : lS(1, 8)
                                        };
                                        (() => {
                                            const __callInstance49 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.addAction(w, C);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance49.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            }
                        });
                        const __exports = __ifInstance198.exports;
                        return __exports.data(C.keyTimes ? 1 : 0);
                    })();
                }
            }
        }
        (() => {
            const __callInstance48 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.createKeyActions();
                    }
                }
            });
            const __exports = __callInstance48.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance47 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.createAnimationRules(F);
                    }
                }
            });
            const __exports = __callInstance47.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance46 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.createAnimationRuleForKeyframes(F);
                    }
                }
            });
            const __exports = __callInstance46.exports;
            return __exports.data();
        })();
    },
    addAction: function (b, a) {
        (() => {
            const __ifInstance199 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            b.timingControlPoint1x = a.timingControlPoint1x;
                            b.timingControlPoint1y = a.timingControlPoint1y;
                            b.timingControlPoint2x = a.timingControlPoint2x;
                            b.timingControlPoint2y = a.timingControlPoint2y;
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                const __ifInstance200 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __ifInstance201 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    b.timingControlPoint1x = b.timingFunction.timingControlPoint1x;
                                                                    b.timingControlPoint1y = b.timingFunction.timingControlPoint1y;
                                                                    b.timingControlPoint2x = b.timingFunction.timingControlPoint2x;
                                                                    b.timingControlPoint2y = b.timingFunction.timingControlPoint2y;
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance201.exports;
                                                    return __exports.data(b.timingFunction.timingFunction === lS(1, 10) ? 1 : 0);
                                                })();
                                                b.timingFunction = b.timingFunction.timingFunction;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance200.exports;
                                return __exports.data(b.timingFunction.timingFunction != null ? 1 : 0);
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance199.exports;
            return __exports.data(a.timingFunction === lS(1, 9) ? 1 : 0);
        })();
        (() => {
            const __callInstance45 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        this.animations.push(b);
                    }
                }
            });
            const __exports = __callInstance45.exports;
            return __exports.data();
        })();
    },
    createKeyActions: function () {
        (() => {
            var e = 0, a = this.animations.length;
            const __forInstance27 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return e < a ? 1 : 0;
                    },
                    update: () => {
                        e++;
                    },
                    body: () => {
                        {
                            var c = this.animations[e];
                            var d = c.beginTime;
                            var b = c.duration;
                            var g = d + b;
                            var n = c.property;
                            var h = this.keyAnimations[n];
                            var m = h.keyActions;
                            var k = h.latestEndTime - h.earliestBeginTime;
                            var l = 0;
                            var j = 100;
                            (() => {
                                const __ifInstance202 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                l = 100 * d / this.overallEndTime;
                                                j = 100 * g / this.overallEndTime;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance202.exports;
                                return __exports.data(k > 0 ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance203 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                j = 100;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance203.exports;
                                return __exports.data(j > 100 ? 1 : 0);
                            })();
                            var f = {
                                startKeyframe: l,
                                endKeyframe: j,
                                from: c.from,
                                to: c.to,
                                timingFunction: c.timingFunction
                            };
                            (() => {
                                const __ifInstance204 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                f.fillMode = c.fillMode;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance204.exports;
                                return __exports.data(c.fillMode ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance205 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                f.timingControlPoint1x = c.timingControlPoint1x;
                                                f.timingControlPoint1y = c.timingControlPoint1y;
                                                f.timingControlPoint2x = c.timingControlPoint2x;
                                                f.timingControlPoint2y = c.timingControlPoint2y;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance205.exports;
                                return __exports.data(c.timingFunction == lS(1, 11) ? 1 : 0);
                            })();
                            (() => {
                                const __callInstance44 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            m.push(f);
                                        }
                                    }
                                });
                                const __exports = __callInstance44.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance43 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            m.sort(this.sortAction);
                                        }
                                    }
                                });
                                const __exports = __callInstance43.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __forInstance27.exports;
            return __exports.data();
        })();
    },
    sortAction: function (b, a) {
        return b.startKeyframe - a.startKeyframe;
    },
    roundNum: function (a) {
        return Math.round(a * this.kRoundingFactor) / this.kRoundingFactor;
    },
    createAnimationRules: function (x) {
        var f = this.kDelta;
        for (var j in this.keyAnimations) {
            if (j == lS(1, 12)) {
                continue;
            }
            var r = this.keyAnimations[j];
            var h = r.keyActions;
            var k = false;
            r.keyframes = [];
            var p = h[0];
            var t = this.roundNum(p.startKeyframe);
            var n = this.roundNum(100 * r.groupBeginTime / this.overallEndTime);
            if (j == lS(1, 13)) {
                var c = {};
                c.x = p.to.pointX;
                c.y = p.to.pointY;
                var g = this.anchorPointOffset(x, c);
                var o = {
                    pointX: g.x,
                    pointY: g.y
                };
                (() => {
                    const __ifInstance206 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    var v = this.anchorPointOffset(x, {
                                        x: p.from.pointX,
                                        y: p.from.pointY
                                    });
                                    var l = {
                                        pointX: v.x,
                                        pointY: v.y
                                    };
                                    var d = this.anchorPointOffset(x, {
                                        x: p.to.pointX,
                                        y: p.to.pointY
                                    });
                                    var w = {
                                        pointX: d.x,
                                        pointY: d.y
                                    };
                                    (() => {
                                        const __ifInstance207 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        o = {
                                                            pointX: w.pointX - l.pointX,
                                                            pointY: w.pointY - l.pointY
                                                        };
                                                        x.magicMoveOffsetValue = o;
                                                    }
                                                },
                                                impFunc2: () => {
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance207.exports;
                                        return __exports.data(l.pointX !== w.pointX || l.pointY != w.pointY ? 1 : 0);
                                    })();
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance206.exports;
                    return __exports.data(x.isMagicMove ? 1 : 0);
                })();
                (() => {
                    const __ifInstance208 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    var u = this.createInitialKeyframeValue(x, j, p.from, false);
                                    (() => {
                                        const __ifInstance209 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        u = {
                                                            pointX: 0,
                                                            pointY: 0
                                                        };
                                                    }
                                                },
                                                impFunc2: () => {
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance209.exports;
                                        return __exports.data(x.isMagicMove ? 1 : 0);
                                    })();
                                    (() => {
                                        const __callInstance42 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    r.keyframes.push({
                                                        keyframe: 0,
                                                        keyName: 'position',
                                                        value: u,
                                                        timingFunction: 'linear'
                                                    });
                                                }
                                            }
                                        });
                                        const __exports = __callInstance42.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance41 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    r.keyframes.push({
                                                        keyframe: t - f,
                                                        keyName: 'position',
                                                        value: u,
                                                        timingFunction: 'linear'
                                                    });
                                                }
                                            }
                                        });
                                        const __exports = __callInstance41.exports;
                                        return __exports.data();
                                    })();
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance208.exports;
                    return __exports.data(t != 0 ? 1 : 0);
                })();
                (() => {
                    const __callInstance40 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                r.keyframes.push({
                                    keyframe: t,
                                    keyName: 'position',
                                    value: o,
                                    timingFunction: 'linear'
                                });
                            }
                        }
                    });
                    const __exports = __callInstance40.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance39 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                r.keyframes.push({
                                    keyframe: 100,
                                    keyName: 'position',
                                    value: o,
                                    timingFunction: 'linear'
                                });
                            }
                        }
                    });
                    const __exports = __callInstance39.exports;
                    return __exports.data();
                })();
                x.transformOriginValue = c.x * 100 + lS(1, 14) + c.y * 100 + lS(1, 15);
                continue;
            }
            if (j == lS(1, 16)) {
                k = true;
                (() => {
                    const __ifInstance210 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    var u = this.createInitialKeyframeValue(x, j, p.from, true);
                                    (() => {
                                        const __callInstance38 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    r.keyframes.push({
                                                        keyframe: 0,
                                                        keyName: 'zPosition',
                                                        value: u,
                                                        timingFunction: 'linear'
                                                    });
                                                }
                                            }
                                        });
                                        const __exports = __callInstance38.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance37 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    r.keyframes.push({
                                                        keyframe: t - f,
                                                        keyName: 'zPosition',
                                                        value: u,
                                                        timingFunction: 'linear'
                                                    });
                                                }
                                            }
                                        });
                                        const __exports = __callInstance37.exports;
                                        return __exports.data();
                                    })();
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance210.exports;
                    return __exports.data(t != 0 ? 1 : 0);
                })();
                (() => {
                    const __callInstance36 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                r.keyframes.push({
                                    keyframe: t,
                                    keyName: 'zPosition',
                                    value: p.from,
                                    timingFunction: 'linear'
                                });
                            }
                        }
                    });
                    const __exports = __callInstance36.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance35 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                r.keyframes.push({
                                    keyframe: 100,
                                    keyName: 'zPosition',
                                    value: p.to,
                                    timingFunction: 'linear'
                                });
                            }
                        }
                    });
                    const __exports = __callInstance35.exports;
                    return __exports.data();
                })();
                x.transformOriginZValue = p.to.scalar;
                continue;
            }
            if (p == null) {
                continue;
            }
            var m = 0;
            var s = null;
            var e = null;
            (() => {
                const __ifInstance211 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __ifInstance212 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    e = { scalar: x.hidden };
                                                    (() => {
                                                        const __callInstance34 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    this.insertInitialKeyframes(r, t - f, j, e);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance34.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    (() => {
                                                        const __ifInstance213 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance214 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            e = p.from;
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                        {
                                                                                            e = { scalar: x.opacity };
                                                                                        }
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance214.exports;
                                                                            return __exports.data(p.fillMode === lS(1, 19) || p.fillMode === lS(1, 20) ? 1 : 0);
                                                                        })();
                                                                        (() => {
                                                                            const __callInstance33 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        this.insertInitialKeyframes(r, t - f, j, e);
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance33.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                    {
                                                                        (() => {
                                                                            const __ifInstance215 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __ifInstance216 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                e = {
                                                                                                                    pointX: this.roundNum(p.from.pointX - x.initialState.position.pointX),
                                                                                                                    pointY: this.roundNum(p.from.pointY - x.initialState.position.pointY)
                                                                                                                };
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                            {
                                                                                                                e = {
                                                                                                                    pointX: 0,
                                                                                                                    pointY: 0
                                                                                                                };
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance216.exports;
                                                                                                return __exports.data(x.isBuildIn || x.isBuildOut ? 1 : 0);
                                                                                            })();
                                                                                            (() => {
                                                                                                const __callInstance32 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc: () => {
                                                                                                            this.insertInitialKeyframes(r, t - f, j, e);
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __callInstance32.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                        {
                                                                                            e = this.createInitialKeyframeValue(x, j, p.from, k);
                                                                                            (() => {
                                                                                                const __ifInstance217 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                (() => {
                                                                                                                    const __callInstance31 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                this.insertInitialKeyframes(r, n - f, j, e);
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance31.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance217.exports;
                                                                                                return __exports.data(n > 0 ? 1 : 0);
                                                                                            })();
                                                                                            (() => {
                                                                                                const __ifInstance218 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                (() => {
                                                                                                                    const __ifInstance219 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc1: () => {
                                                                                                                                {
                                                                                                                                    e = p.from;
                                                                                                                                }
                                                                                                                            },
                                                                                                                            impFunc2: () => {
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __ifInstance219.exports;
                                                                                                                    return __exports.data(p.fillMode === lS(1, 22) || p.fillMode === lS(1, 23) ? 1 : 0);
                                                                                                                })();
                                                                                                                (() => {
                                                                                                                    const __callInstance30 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                r.keyframes.push({
                                                                                                                                    keyframe: n,
                                                                                                                                    keyName: j,
                                                                                                                                    value: e,
                                                                                                                                    timingFunction: 'linear'
                                                                                                                                });
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance30.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                                (() => {
                                                                                                                    const __callInstance29 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                r.keyframes.push({
                                                                                                                                    keyframe: t - f,
                                                                                                                                    keyName: j,
                                                                                                                                    value: e,
                                                                                                                                    timingFunction: 'linear'
                                                                                                                                });
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance29.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance218.exports;
                                                                                                return __exports.data(t - n > f ? 1 : 0);
                                                                                            })();
                                                                                        }
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance215.exports;
                                                                            return __exports.data(j === lS(1, 21) ? 1 : 0);
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance213.exports;
                                                        return __exports.data(j === lS(1, 18) ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance212.exports;
                                    return __exports.data(j === lS(1, 17) ? 1 : 0);
                                })();
                                m = p.startKeyframe;
                                s = e;
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance211.exports;
                return __exports.data(t != 0 ? 1 : 0);
            })();
            (() => {
                var q = 0, b = h.length;
                const __forInstance28 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return q < b ? 1 : 0;
                        },
                        update: () => {
                            q++;
                        },
                        body: () => {
                            {
                                p = h[q];
                                (() => {
                                    const __ifInstance220 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    e = x.initialState.position;
                                                    p.from = {
                                                        pointX: this.roundNum(p.from.pointX - e.pointX),
                                                        pointY: this.roundNum(p.from.pointY - e.pointY)
                                                    };
                                                    p.to = {
                                                        pointX: this.roundNum(p.to.pointX - e.pointX),
                                                        pointY: this.roundNum(p.to.pointY - e.pointY)
                                                    };
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance220.exports;
                                    return __exports.data(j == lS(1, 24) ? 1 : 0);
                                })();
                                (() => {
                                    const __ifInstance221 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    (() => {
                                                        const __callInstance28 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    r.keyframes.push({
                                                                        keyframe: this.roundNum(p.startKeyframe) - f,
                                                                        keyName: j,
                                                                        value: s,
                                                                        timingFunction: 'linear'
                                                                    });
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance28.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance221.exports;
                                    return __exports.data(Math.abs(p.startKeyframe - m) > f ? 1 : 0);
                                })();
                                var a = this.createTimingFunctionForAction(p);
                                (() => {
                                    const __callInstance27 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                r.keyframes.push({
                                                    keyframe: this.roundNum(p.startKeyframe),
                                                    keyName: j,
                                                    value: p.from,
                                                    timingFunction: a
                                                });
                                            }
                                        }
                                    });
                                    const __exports = __callInstance27.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance26 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                r.keyframes.push({
                                                    keyframe: this.roundNum(p.endKeyframe) - (p.endKeyframe == 100 ? 0 : f),
                                                    keyName: j,
                                                    value: p.to,
                                                    timingFunction: a
                                                });
                                            }
                                        }
                                    });
                                    const __exports = __callInstance26.exports;
                                    return __exports.data();
                                })();
                                s = p.to;
                                m = p.endKeyframe;
                            }
                        }
                    }
                });
                const __exports = __forInstance28.exports;
                return __exports.data();
            })();
            (() => {
                const __ifInstance222 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                (() => {
                                    const __callInstance25 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                r.keyframes.push({
                                                    keyframe: this.roundNum(m),
                                                    keyName: j,
                                                    value: s,
                                                    timingFunction: 'linear'
                                                });
                                            }
                                        }
                                    });
                                    const __exports = __callInstance25.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance24 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                r.keyframes.push({
                                                    keyframe: 100,
                                                    keyName: j,
                                                    value: s,
                                                    timingFunction: 'linear'
                                                });
                                            }
                                        }
                                    });
                                    const __exports = __callInstance24.exports;
                                    return __exports.data();
                                })();
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance222.exports;
                return __exports.data(m != 100 && j != lS(1, 25) ? 1 : 0);
            })();
        }
    },
    insertInitialKeyframes: function (b, c, d, a) {
        (() => {
            const __callInstance23 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        b.keyframes.push({
                            keyframe: 0,
                            keyName: d,
                            value: a,
                            timingFunction: 'linear'
                        });
                    }
                }
            });
            const __exports = __callInstance23.exports;
            return __exports.data();
        })();
        (() => {
            const __callInstance22 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        b.keyframes.push({
                            keyframe: c,
                            keyName: d,
                            value: a,
                            timingFunction: 'linear'
                        });
                    }
                }
            });
            const __exports = __callInstance22.exports;
            return __exports.data();
        })();
    },
    anchorPointOffset: function (c, e) {
        var a = {};
        var b = {};
        var f = {};
        var d = c.bounds;
        a.x = d.width / 2;
        a.y = d.height / 2;
        b.x = e.x * d.width;
        b.y = e.y * d.height;
        f.x = a.x - b.x;
        f.y = a.y - b.y;
        return f;
    },
    createInitialKeyframeValue: function (a, c, e, b) {
        var d = {};
        switch (c) {
        case lS(1, 26):
            d.pointX = (a.anchorPoint.pointX - 0.5) * a.bounds.width;
            d.pointY = (a.anchorPoint.pointY - 0.5) * a.bounds.height;
            break;
        case lS(1, 27):
            (() => {
                const __ifInstance223 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                d.scalar = 0;
                            }
                        },
                        impFunc2: () => {
                            {
                                d.scalar = e.scalar + e.scalar;
                            }
                        }
                    }
                });
                const __exports = __ifInstance223.exports;
                return __exports.data(Prototype.Browser.Gecko || Prototype.Browser.IE || isChrome || isIE ? 1 : 0);
            })();
            break;
        case lS(1, 28):
        case lS(1, 29):
            d.scalar = a.opacity;
            break;
        case lS(1, 30):
            d.scalar = a.hidden;
            break;
        case lS(1, 31):
            d.pointX = a.affineTransform[4];
            d.pointY = a.affineTransform[5];
            break;
        case lS(1, 32):
            d.scalar = 0;
            break;
        case lS(1, 33):
        case lS(1, 34):
        case lS(1, 35):
        case lS(1, 36):
            d.scalar = a.initialState.scale;
            break;
        case lS(1, 37):
            d.scalar = a.initialState.rotation;
        case lS(1, 38):
            d.transform = e.transform;
            break;
        case lS(1, 39):
            d.pointX = 0;
            d.pointY = 0;
            d.width = a.initialState.width;
            d.height = a.initialState.height;
            break;
        default:
            d.scalar = 0;
            d.pointX = 0;
            d.pointY = 0;
            break;
        }
        return d;
    },
    createTimingFunctionForAction: function (b) {
        var a = lS(1, 40);
        switch (b.timingFunction) {
        case lS(1, 41):
            a = lS(1, 42);
            break;
        case lS(1, 43):
            a = lS(1, 44);
            break;
        case lS(1, 45):
        case lS(1, 46):
            a = lS(1, 47);
            break;
        case lS(1, 48):
            a = lS(1, 49) + b.timingControlPoint1x + lS(1, 50) + b.timingControlPoint1y + lS(1, 51) + b.timingControlPoint2x + lS(1, 52) + b.timingControlPoint2y + lS(1, 53);
            break;
        case lS(1, 54):
            a = lS(1, 55);
            break;
        default:
            a = lS(1, 56);
            break;
        }
        return a;
    },
    createAnimationRuleForKeyframes: function (d) {
        for (var n in this.keyAnimations) {
            var f = this.keyAnimations[n];
            var e = lS(1, 57) + d.layerId + lS(1, 58) + escapeTextureId(n);
            var b;
            var h = lS(1, 59);
            var o;
            if (n === lS(1, 60)) {
                var m = this.roundNum(f.keyActions[0].startKeyframe);
                b = gShowController.animationManager.createAnimation(e + lS(1, 61));
                var l = lS(1, 62) + kAnimationTimingFunctionPropertyName + lS(1, 63);
                var k = lS(1, 64) + kAnimationTimingFunctionPropertyName + lS(1, 65);
                var j = lS(1, 66) + kAnimationTimingFunctionPropertyName + lS(1, 67);
                var g = lS(1, 68) + kAnimationTimingFunctionPropertyName + lS(1, 69);
                (() => {
                    const __ifInstance224 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    k = (100 - m) / 2 + m - this.kDelta - this.kDelta + lS(1, 70) + kAnimationTimingFunctionPropertyName + lS(1, 71);
                                    j = (100 - m) / 2 + m + lS(1, 72) + kAnimationTimingFunctionPropertyName + lS(1, 73);
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance224.exports;
                    return __exports.data(m !== 0 ? 1 : 0);
                })();
                (() => {
                    const __ifInstance225 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    (() => {
                                        const __callInstance21 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(l);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance21.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance20 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(k);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance20.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance19 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(j);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance19.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance18 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(g);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance18.exports;
                                        return __exports.data();
                                    })();
                                }
                            },
                            impFunc2: () => {
                                {
                                    (() => {
                                        const __callInstance17 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(l);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance17.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance16 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(k);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance16.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance15 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(j);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance15.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance14 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(g);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance14.exports;
                                        return __exports.data();
                                    })();
                                }
                            }
                        }
                    });
                    const __exports = __ifInstance225.exports;
                    return __exports.data(b.insertRule ? 1 : 0);
                })();
                b = gShowController.animationManager.createAnimation(e + lS(1, 74));
                l = lS(1, 75) + kAnimationTimingFunctionPropertyName + lS(1, 76);
                k = lS(1, 77) + kAnimationTimingFunctionPropertyName + lS(1, 78);
                j = lS(1, 79) + kAnimationTimingFunctionPropertyName + lS(1, 80);
                g = lS(1, 81) + kAnimationTimingFunctionPropertyName + lS(1, 82);
                (() => {
                    const __ifInstance226 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    k = (100 - m) / 2 + m - this.kDelta - this.kDelta + lS(1, 83) + kAnimationTimingFunctionPropertyName + lS(1, 84);
                                    j = (100 - m) / 2 + m + lS(1, 85) + kAnimationTimingFunctionPropertyName + lS(1, 86);
                                }
                            },
                            impFunc2: () => {
                            }
                        }
                    });
                    const __exports = __ifInstance226.exports;
                    return __exports.data(m !== 0 ? 1 : 0);
                })();
                (() => {
                    const __ifInstance227 = new WebAssembly.Instance(__ifWasmModule, {
                        env: {
                            impFunc1: () => {
                                {
                                    (() => {
                                        const __callInstance13 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(l);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance13.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance12 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(k);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance12.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance11 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(j);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance11.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance10 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.insertRule(g);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance10.exports;
                                        return __exports.data();
                                    })();
                                }
                            },
                            impFunc2: () => {
                                {
                                    (() => {
                                        const __callInstance9 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(l);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance9.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance8 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(k);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance8.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance7 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(j);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance7.exports;
                                        return __exports.data();
                                    })();
                                    (() => {
                                        const __callInstance6 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    b.appendRule(g);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance6.exports;
                                        return __exports.data();
                                    })();
                                }
                            }
                        }
                    });
                    const __exports = __ifInstance227.exports;
                    return __exports.data(b.insertRule ? 1 : 0);
                })();
                continue;
            }
            (() => {
                const __ifInstance228 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                b = gShowController.animationManager.createAnimation(e);
                                (() => {
                                    var c = 0, a = f.keyframes.length;
                                    const __forInstance29 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return c < a ? 1 : 0;
                                            },
                                            update: () => {
                                                c++;
                                            },
                                            body: () => {
                                                {
                                                    o = f.keyframes[c];
                                                    h = this.createAnimationRuleForKeyframe(n, o, d) + lS(1, 88);
                                                    (() => {
                                                        const __ifInstance229 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance5 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        b.insertRule(h);
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance5.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance4 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        b.appendRule(h);
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance4.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance229.exports;
                                                        return __exports.data(b.insertRule ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance29.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance3 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                d.cssAnimationRules.push(e);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance3.exports;
                                    return __exports.data();
                                })();
                            }
                        },
                        impFunc2: () => {
                            {
                                (() => {
                                    const __ifInstance230 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    (() => {
                                                        var c = 0, a = f.keyframes.length;
                                                        const __forInstance30 = new WebAssembly.Instance(__forWasmModule, {
                                                            env: {
                                                                test: () => {
                                                                    return c < a ? 1 : 0;
                                                                },
                                                                update: () => {
                                                                    c++;
                                                                },
                                                                body: () => {
                                                                    {
                                                                        o = f.keyframes[c];
                                                                        h += this.createAnimationRuleForKeyframe(n, o, d) + lS(1, 89);
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __forInstance30.exports;
                                                        return __exports.data();
                                                    })();
                                                    (() => {
                                                        const __ifInstance231 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance2 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        gShowController.animationManager.styleSheet.insertRule(kKeyframesPropertyName + lS(1, 90) + e + lS(1, 91) + h + lS(1, 92), 0);
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance2.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance1 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        gShowController.animationManager.styleSheet.appendRule(kKeyframesPropertyName + lS(1, 93) + e + lS(1, 94) + h + lS(1, 95), 0);
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance1.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance231.exports;
                                                        return __exports.data(gShowController.animationManager.styleSheet.insertRule ? 1 : 0);
                                                    })();
                                                    (() => {
                                                        const __callInstance0 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    d.cssAnimationRules.push(e);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance0.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance230.exports;
                                    return __exports.data(browserVersion >= 10 ? 1 : 0);
                                })();
                            }
                        }
                    }
                });
                const __exports = __ifInstance228.exports;
                return __exports.data(browserPrefix != lS(1, 87) ? 1 : 0);
            })();
        }
    },
    createAnimationRuleForKeyframe: function (l, m, g) {
        var j = m.keyframe;
        var f = m.keyName;
        var k = m.value;
        var n = m.timingFunction;
        var d;
        var c = g.transformOriginValue;
        var e = g.transformOriginZValue;
        var h = lS(1, 96);
        (() => {
            const __ifInstance232 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            h = kTransformOriginPropertyName + lS(1, 97) + c + lS(1, 98);
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance232.exports;
            return __exports.data(c ? 1 : 0);
        })();
        (() => {
            const __ifInstance233 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            var a = { scalar: -1 };
                            (() => {
                                const __ifInstance234 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                a.scalar = 1;
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                a.scalar = 0;
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance234.exports;
                                return __exports.data(k.scalar == false ? 1 : 0);
                            })();
                            f = lS(1, 100);
                            d = this.cssPropertyValueForActionValue(l, f, a);
                        }
                    },
                    impFunc2: () => {
                        {
                            d = this.cssPropertyValueForActionValue(l, f, k);
                        }
                    }
                }
            });
            const __exports = __ifInstance233.exports;
            return __exports.data(f == lS(1, 99) ? 1 : 0);
        })();
        var b;
        b = this.cssPropertyNameForAction(f) + lS(1, 101) + d + lS(1, 102) + (j < 100 ? kAnimationTimingFunctionPropertyName + lS(1, 103) + n + lS(1, 104) : lS(1, 105));
        var i = j + lS(1, 106) + h + b + lS(1, 107);
        return i;
    },
    cssPropertyValueForActionValue: function (b, a, c) {
        switch (a) {
        case lS(1, 108):
            if (c.scalar == true) {
                return lS(1, 109);
            } else {
                return lS(1, 110);
            }
        case lS(1, 111):
            return c.pointX + lS(1, 112) + c.pointY + lS(1, 113);
        case lS(1, 114):
            return c.scalar;
        case lS(1, 115):
            return lS(1, 116) + c.pointX + lS(1, 117) + c.pointY + lS(1, 118);
        case lS(1, 119):
            if (b == lS(1, 120) && (Prototype.Browser.Gecko || navigator.userAgent.lastIndexOf(lS(1, 121)) > 0)) {
                return lS(1, 122) + -c.scalar + lS(1, 123);
            } else {
                return lS(1, 124) + c.scalar + lS(1, 125);
            }
        case lS(1, 126):
            return lS(1, 127) + c.translationEmphasis[0] + lS(1, 128) + c.translationEmphasis[1] + lS(1, 129) + c.translationEmphasis[2] + lS(1, 130);
        case lS(1, 131):
            return lS(1, 132) + c.rotationEmphasis[6] + lS(1, 133);
        case lS(1, 134):
            return lS(1, 135) + ensureScaleFactorNotZero(c.scaleEmphasis[3]) + lS(1, 136) + ensureScaleFactorNotZero(c.scaleEmphasis[4]) + lS(1, 137) + ensureScaleFactorNotZero(c.scaleEmphasis[5]) + lS(1, 138);
        case lS(1, 139):
        case lS(1, 140):
            return lS(1, 141) + ensureScaleFactorNotZero(c.scalar) + lS(1, 142);
        case lS(1, 143):
            return lS(1, 144) + ensureScaleFactorNotZero(c.scalar) + lS(1, 145);
        case lS(1, 146):
            return lS(1, 147) + ensureScaleFactorNotZero(c.scalar) + lS(1, 148);
        case lS(1, 149):
            return lS(1, 150) + c.scalar + lS(1, 151);
        case lS(1, 152):
            return lS(1, 153) + c.scalar + lS(1, 154);
        case lS(1, 155):
        case lS(1, 156):
            return lS(1, 157) + c.scalar + lS(1, 158);
        case lS(1, 159):
            return lS(1, 160) + c.pointX + lS(1, 161) + c.pointY + lS(1, 162);
        case lS(1, 163):
            return lS(1, 164) + c.scalar + lS(1, 165);
        case lS(1, 166):
            return lS(1, 167) + c.scalar + lS(1, 168);
        case lS(1, 169):
            return lS(1, 170) + c.scalar + lS(1, 171);
        case lS(1, 172):
        case lS(1, 173):
        case lS(1, 174):
            return c.scalar + lS(1, 175);
        case lS(1, 176):
            return lS(1, 177) + c.transform + lS(1, 178);
        case lS(1, 179):
            if (c.scalar == false) {
                return lS(1, 180);
            } else {
                return lS(1, 181);
            }
        case lS(1, 182):
            return c.texture;
        default:
            return lS(1, 183);
        }
    },
    cssPropertyNameForAction: function (a) {
        switch (a) {
        case lS(1, 184):
            return kVisibilityPropertyName;
        case lS(1, 185):
            return kTransformOriginPropertyName;
        case lS(1, 186):
            return kTransformOriginZPropertyName;
        case lS(1, 187):
            return kOpacityPropertyName;
        case lS(1, 188):
        case lS(1, 189):
        case lS(1, 190):
        case lS(1, 191):
        case lS(1, 192):
        case lS(1, 193):
        case lS(1, 194):
        case lS(1, 195):
        case lS(1, 196):
        case lS(1, 197):
        case lS(1, 198):
        case lS(1, 199):
        case lS(1, 200):
        case lS(1, 201):
        case lS(1, 202):
        case lS(1, 203):
        case lS(1, 204):
        case lS(1, 205):
        case lS(1, 206):
            return kTransformPropertyName;
        case lS(1, 207):
            return kBackfaceVisibilityPropertyName;
        case lS(1, 208):
            return kBackgroundImagePropertyName;
        default:
            return a;
        }
    }
});